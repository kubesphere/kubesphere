// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtime_provider.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterRuntimeProviderRequest struct {
	// required, runtime provider.eg:[qingcloud|aliyun|aws|kubernetes]
	Provider *wrappers.StringValue `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	// required, configure of runtime provider
	Config               *wrappers.StringValue `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RegisterRuntimeProviderRequest) Reset()         { *m = RegisterRuntimeProviderRequest{} }
func (m *RegisterRuntimeProviderRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRuntimeProviderRequest) ProtoMessage()    {}
func (*RegisterRuntimeProviderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{0}
}

func (m *RegisterRuntimeProviderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRuntimeProviderRequest.Unmarshal(m, b)
}
func (m *RegisterRuntimeProviderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRuntimeProviderRequest.Marshal(b, m, deterministic)
}
func (m *RegisterRuntimeProviderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRuntimeProviderRequest.Merge(m, src)
}
func (m *RegisterRuntimeProviderRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRuntimeProviderRequest.Size(m)
}
func (m *RegisterRuntimeProviderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRuntimeProviderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRuntimeProviderRequest proto.InternalMessageInfo

func (m *RegisterRuntimeProviderRequest) GetProvider() *wrappers.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *RegisterRuntimeProviderRequest) GetConfig() *wrappers.StringValue {
	if m != nil {
		return m.Config
	}
	return nil
}

type RegisterRuntimeProviderResponse struct {
	// register ok or not
	Ok                   *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RegisterRuntimeProviderResponse) Reset()         { *m = RegisterRuntimeProviderResponse{} }
func (m *RegisterRuntimeProviderResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterRuntimeProviderResponse) ProtoMessage()    {}
func (*RegisterRuntimeProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{1}
}

func (m *RegisterRuntimeProviderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRuntimeProviderResponse.Unmarshal(m, b)
}
func (m *RegisterRuntimeProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRuntimeProviderResponse.Marshal(b, m, deterministic)
}
func (m *RegisterRuntimeProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRuntimeProviderResponse.Merge(m, src)
}
func (m *RegisterRuntimeProviderResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterRuntimeProviderResponse.Size(m)
}
func (m *RegisterRuntimeProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRuntimeProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRuntimeProviderResponse proto.InternalMessageInfo

func (m *RegisterRuntimeProviderResponse) GetOk() *wrappers.BoolValue {
	if m != nil {
		return m.Ok
	}
	return nil
}

type ParseClusterConfRequest struct {
	// required, runtime id
	RuntimeId *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	// version id
	VersionId *wrappers.StringValue `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// required, configure
	Conf *wrappers.StringValue `protobuf:"bytes,3,opt,name=conf,proto3" json:"conf,omitempty"`
	// cluster in the runtime
	Cluster              *Cluster `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParseClusterConfRequest) Reset()         { *m = ParseClusterConfRequest{} }
func (m *ParseClusterConfRequest) String() string { return proto.CompactTextString(m) }
func (*ParseClusterConfRequest) ProtoMessage()    {}
func (*ParseClusterConfRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{2}
}

func (m *ParseClusterConfRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseClusterConfRequest.Unmarshal(m, b)
}
func (m *ParseClusterConfRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseClusterConfRequest.Marshal(b, m, deterministic)
}
func (m *ParseClusterConfRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseClusterConfRequest.Merge(m, src)
}
func (m *ParseClusterConfRequest) XXX_Size() int {
	return xxx_messageInfo_ParseClusterConfRequest.Size(m)
}
func (m *ParseClusterConfRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseClusterConfRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ParseClusterConfRequest proto.InternalMessageInfo

func (m *ParseClusterConfRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *ParseClusterConfRequest) GetVersionId() *wrappers.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *ParseClusterConfRequest) GetConf() *wrappers.StringValue {
	if m != nil {
		return m.Conf
	}
	return nil
}

func (m *ParseClusterConfRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type ParseClusterConfResponse struct {
	// cluster
	Cluster              *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParseClusterConfResponse) Reset()         { *m = ParseClusterConfResponse{} }
func (m *ParseClusterConfResponse) String() string { return proto.CompactTextString(m) }
func (*ParseClusterConfResponse) ProtoMessage()    {}
func (*ParseClusterConfResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{3}
}

func (m *ParseClusterConfResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParseClusterConfResponse.Unmarshal(m, b)
}
func (m *ParseClusterConfResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParseClusterConfResponse.Marshal(b, m, deterministic)
}
func (m *ParseClusterConfResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParseClusterConfResponse.Merge(m, src)
}
func (m *ParseClusterConfResponse) XXX_Size() int {
	return xxx_messageInfo_ParseClusterConfResponse.Size(m)
}
func (m *ParseClusterConfResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ParseClusterConfResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ParseClusterConfResponse proto.InternalMessageInfo

func (m *ParseClusterConfResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type SplitJobIntoTasksRequest struct {
	// required, runtime id
	RuntimeId *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	// required, job to split
	Job                  *Job     `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SplitJobIntoTasksRequest) Reset()         { *m = SplitJobIntoTasksRequest{} }
func (m *SplitJobIntoTasksRequest) String() string { return proto.CompactTextString(m) }
func (*SplitJobIntoTasksRequest) ProtoMessage()    {}
func (*SplitJobIntoTasksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{4}
}

func (m *SplitJobIntoTasksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitJobIntoTasksRequest.Unmarshal(m, b)
}
func (m *SplitJobIntoTasksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitJobIntoTasksRequest.Marshal(b, m, deterministic)
}
func (m *SplitJobIntoTasksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitJobIntoTasksRequest.Merge(m, src)
}
func (m *SplitJobIntoTasksRequest) XXX_Size() int {
	return xxx_messageInfo_SplitJobIntoTasksRequest.Size(m)
}
func (m *SplitJobIntoTasksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitJobIntoTasksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SplitJobIntoTasksRequest proto.InternalMessageInfo

func (m *SplitJobIntoTasksRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *SplitJobIntoTasksRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type SplitJobIntoTasksResponse struct {
	// job will split to TaskLayer
	TaskLayer            *TaskLayer `protobuf:"bytes,1,opt,name=taskLayer,proto3" json:"taskLayer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SplitJobIntoTasksResponse) Reset()         { *m = SplitJobIntoTasksResponse{} }
func (m *SplitJobIntoTasksResponse) String() string { return proto.CompactTextString(m) }
func (*SplitJobIntoTasksResponse) ProtoMessage()    {}
func (*SplitJobIntoTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{5}
}

func (m *SplitJobIntoTasksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitJobIntoTasksResponse.Unmarshal(m, b)
}
func (m *SplitJobIntoTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitJobIntoTasksResponse.Marshal(b, m, deterministic)
}
func (m *SplitJobIntoTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitJobIntoTasksResponse.Merge(m, src)
}
func (m *SplitJobIntoTasksResponse) XXX_Size() int {
	return xxx_messageInfo_SplitJobIntoTasksResponse.Size(m)
}
func (m *SplitJobIntoTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitJobIntoTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SplitJobIntoTasksResponse proto.InternalMessageInfo

func (m *SplitJobIntoTasksResponse) GetTaskLayer() *TaskLayer {
	if m != nil {
		return m.TaskLayer
	}
	return nil
}

type HandleSubtaskRequest struct {
	// required, runtime id
	RuntimeId *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	// required, task to handle
	Task                 *Task    `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleSubtaskRequest) Reset()         { *m = HandleSubtaskRequest{} }
func (m *HandleSubtaskRequest) String() string { return proto.CompactTextString(m) }
func (*HandleSubtaskRequest) ProtoMessage()    {}
func (*HandleSubtaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{6}
}

func (m *HandleSubtaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleSubtaskRequest.Unmarshal(m, b)
}
func (m *HandleSubtaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleSubtaskRequest.Marshal(b, m, deterministic)
}
func (m *HandleSubtaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleSubtaskRequest.Merge(m, src)
}
func (m *HandleSubtaskRequest) XXX_Size() int {
	return xxx_messageInfo_HandleSubtaskRequest.Size(m)
}
func (m *HandleSubtaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleSubtaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleSubtaskRequest proto.InternalMessageInfo

func (m *HandleSubtaskRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *HandleSubtaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type HandleSubtaskResponse struct {
	// task handled
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleSubtaskResponse) Reset()         { *m = HandleSubtaskResponse{} }
func (m *HandleSubtaskResponse) String() string { return proto.CompactTextString(m) }
func (*HandleSubtaskResponse) ProtoMessage()    {}
func (*HandleSubtaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{7}
}

func (m *HandleSubtaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleSubtaskResponse.Unmarshal(m, b)
}
func (m *HandleSubtaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleSubtaskResponse.Marshal(b, m, deterministic)
}
func (m *HandleSubtaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleSubtaskResponse.Merge(m, src)
}
func (m *HandleSubtaskResponse) XXX_Size() int {
	return xxx_messageInfo_HandleSubtaskResponse.Size(m)
}
func (m *HandleSubtaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleSubtaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandleSubtaskResponse proto.InternalMessageInfo

func (m *HandleSubtaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type WaitSubtaskRequest struct {
	// required, runtime id
	RuntimeId *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	// required, task to wait
	Task                 *Task    `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitSubtaskRequest) Reset()         { *m = WaitSubtaskRequest{} }
func (m *WaitSubtaskRequest) String() string { return proto.CompactTextString(m) }
func (*WaitSubtaskRequest) ProtoMessage()    {}
func (*WaitSubtaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{8}
}

func (m *WaitSubtaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitSubtaskRequest.Unmarshal(m, b)
}
func (m *WaitSubtaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitSubtaskRequest.Marshal(b, m, deterministic)
}
func (m *WaitSubtaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitSubtaskRequest.Merge(m, src)
}
func (m *WaitSubtaskRequest) XXX_Size() int {
	return xxx_messageInfo_WaitSubtaskRequest.Size(m)
}
func (m *WaitSubtaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitSubtaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WaitSubtaskRequest proto.InternalMessageInfo

func (m *WaitSubtaskRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *WaitSubtaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type WaitSubtaskResponse struct {
	// task waited
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaitSubtaskResponse) Reset()         { *m = WaitSubtaskResponse{} }
func (m *WaitSubtaskResponse) String() string { return proto.CompactTextString(m) }
func (*WaitSubtaskResponse) ProtoMessage()    {}
func (*WaitSubtaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{9}
}

func (m *WaitSubtaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaitSubtaskResponse.Unmarshal(m, b)
}
func (m *WaitSubtaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaitSubtaskResponse.Marshal(b, m, deterministic)
}
func (m *WaitSubtaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaitSubtaskResponse.Merge(m, src)
}
func (m *WaitSubtaskResponse) XXX_Size() int {
	return xxx_messageInfo_WaitSubtaskResponse.Size(m)
}
func (m *WaitSubtaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WaitSubtaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WaitSubtaskResponse proto.InternalMessageInfo

func (m *WaitSubtaskResponse) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

type CheckResourceRequest struct {
	// required, runtime id
	RuntimeId *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	// required, cluster to check
	Cluster              *Cluster `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckResourceRequest) Reset()         { *m = CheckResourceRequest{} }
func (m *CheckResourceRequest) String() string { return proto.CompactTextString(m) }
func (*CheckResourceRequest) ProtoMessage()    {}
func (*CheckResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{10}
}

func (m *CheckResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResourceRequest.Unmarshal(m, b)
}
func (m *CheckResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResourceRequest.Marshal(b, m, deterministic)
}
func (m *CheckResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResourceRequest.Merge(m, src)
}
func (m *CheckResourceRequest) XXX_Size() int {
	return xxx_messageInfo_CheckResourceRequest.Size(m)
}
func (m *CheckResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResourceRequest proto.InternalMessageInfo

func (m *CheckResourceRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *CheckResourceRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type CheckResourceResponse struct {
	// check ok or not
	Ok                   *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CheckResourceResponse) Reset()         { *m = CheckResourceResponse{} }
func (m *CheckResourceResponse) String() string { return proto.CompactTextString(m) }
func (*CheckResourceResponse) ProtoMessage()    {}
func (*CheckResourceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{11}
}

func (m *CheckResourceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckResourceResponse.Unmarshal(m, b)
}
func (m *CheckResourceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckResourceResponse.Marshal(b, m, deterministic)
}
func (m *CheckResourceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckResourceResponse.Merge(m, src)
}
func (m *CheckResourceResponse) XXX_Size() int {
	return xxx_messageInfo_CheckResourceResponse.Size(m)
}
func (m *CheckResourceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckResourceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckResourceResponse proto.InternalMessageInfo

func (m *CheckResourceResponse) GetOk() *wrappers.BoolValue {
	if m != nil {
		return m.Ok
	}
	return nil
}

type DescribeVpcRequest struct {
	// required, get vpc of runtime
	RuntimeId *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	// required, use vpc id to get vpc in runtime
	VpcId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeVpcRequest) Reset()         { *m = DescribeVpcRequest{} }
func (m *DescribeVpcRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeVpcRequest) ProtoMessage()    {}
func (*DescribeVpcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{12}
}

func (m *DescribeVpcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeVpcRequest.Unmarshal(m, b)
}
func (m *DescribeVpcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeVpcRequest.Marshal(b, m, deterministic)
}
func (m *DescribeVpcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeVpcRequest.Merge(m, src)
}
func (m *DescribeVpcRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeVpcRequest.Size(m)
}
func (m *DescribeVpcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeVpcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeVpcRequest proto.InternalMessageInfo

func (m *DescribeVpcRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeVpcRequest) GetVpcId() *wrappers.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

type Eip struct {
	// elastic ip
	EipId *wrappers.StringValue `protobuf:"bytes,1,opt,name=eip_id,json=eipId,proto3" json:"eip_id,omitempty"`
	// eip name
	Name *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// eip address
	Addr                 *wrappers.StringValue `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Eip) Reset()         { *m = Eip{} }
func (m *Eip) String() string { return proto.CompactTextString(m) }
func (*Eip) ProtoMessage()    {}
func (*Eip) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{13}
}

func (m *Eip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Eip.Unmarshal(m, b)
}
func (m *Eip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Eip.Marshal(b, m, deterministic)
}
func (m *Eip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Eip.Merge(m, src)
}
func (m *Eip) XXX_Size() int {
	return xxx_messageInfo_Eip.Size(m)
}
func (m *Eip) XXX_DiscardUnknown() {
	xxx_messageInfo_Eip.DiscardUnknown(m)
}

var xxx_messageInfo_Eip proto.InternalMessageInfo

func (m *Eip) GetEipId() *wrappers.StringValue {
	if m != nil {
		return m.EipId
	}
	return nil
}

func (m *Eip) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Eip) GetAddr() *wrappers.StringValue {
	if m != nil {
		return m.Addr
	}
	return nil
}

type Vpc struct {
	// vpc id
	VpcId *wrappers.StringValue `protobuf:"bytes,1,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	// vpc name
	Name *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// the time when vpc create
	CreateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// vpc description
	Description *wrappers.StringValue `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// cluster status eg.[pending|running|stopped|suspended|terminated|ceased]
	Status *wrappers.StringValue `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// cluster transition status eg.[creating|starting|stopping|restarting|suspending|resuming|terminating|recovering|resetting]
	TransitionStatus *wrappers.StringValue `protobuf:"bytes,6,opt,name=transition_status,json=transitionStatus,proto3" json:"transition_status,omitempty"`
	// list subnet, a vpc contain one more subnet
	Subnets []string `protobuf:"bytes,7,rep,name=subnets,proto3" json:"subnets,omitempty"`
	// elastic ip, a vpc has a eip
	Eip                  *Eip     `protobuf:"bytes,8,opt,name=eip,proto3" json:"eip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vpc) Reset()         { *m = Vpc{} }
func (m *Vpc) String() string { return proto.CompactTextString(m) }
func (*Vpc) ProtoMessage()    {}
func (*Vpc) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{14}
}

func (m *Vpc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vpc.Unmarshal(m, b)
}
func (m *Vpc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vpc.Marshal(b, m, deterministic)
}
func (m *Vpc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vpc.Merge(m, src)
}
func (m *Vpc) XXX_Size() int {
	return xxx_messageInfo_Vpc.Size(m)
}
func (m *Vpc) XXX_DiscardUnknown() {
	xxx_messageInfo_Vpc.DiscardUnknown(m)
}

var xxx_messageInfo_Vpc proto.InternalMessageInfo

func (m *Vpc) GetVpcId() *wrappers.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

func (m *Vpc) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Vpc) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Vpc) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Vpc) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Vpc) GetTransitionStatus() *wrappers.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *Vpc) GetSubnets() []string {
	if m != nil {
		return m.Subnets
	}
	return nil
}

func (m *Vpc) GetEip() *Eip {
	if m != nil {
		return m.Eip
	}
	return nil
}

type DescribeVpcResponse struct {
	// vpc
	Vpc                  *Vpc     `protobuf:"bytes,1,opt,name=vpc,proto3" json:"vpc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeVpcResponse) Reset()         { *m = DescribeVpcResponse{} }
func (m *DescribeVpcResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeVpcResponse) ProtoMessage()    {}
func (*DescribeVpcResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{15}
}

func (m *DescribeVpcResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeVpcResponse.Unmarshal(m, b)
}
func (m *DescribeVpcResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeVpcResponse.Marshal(b, m, deterministic)
}
func (m *DescribeVpcResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeVpcResponse.Merge(m, src)
}
func (m *DescribeVpcResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeVpcResponse.Size(m)
}
func (m *DescribeVpcResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeVpcResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeVpcResponse proto.InternalMessageInfo

func (m *DescribeVpcResponse) GetVpc() *Vpc {
	if m != nil {
		return m.Vpc
	}
	return nil
}

type DescribeClusterDetailsRequest struct {
	// required, get detail of cluster in runtime
	RuntimeId *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	// required, cluster in the runtime
	Cluster              *Cluster `protobuf:"bytes,2,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeClusterDetailsRequest) Reset()         { *m = DescribeClusterDetailsRequest{} }
func (m *DescribeClusterDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeClusterDetailsRequest) ProtoMessage()    {}
func (*DescribeClusterDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{16}
}

func (m *DescribeClusterDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeClusterDetailsRequest.Unmarshal(m, b)
}
func (m *DescribeClusterDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeClusterDetailsRequest.Marshal(b, m, deterministic)
}
func (m *DescribeClusterDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeClusterDetailsRequest.Merge(m, src)
}
func (m *DescribeClusterDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeClusterDetailsRequest.Size(m)
}
func (m *DescribeClusterDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeClusterDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeClusterDetailsRequest proto.InternalMessageInfo

func (m *DescribeClusterDetailsRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeClusterDetailsRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type DescribeClusterDetailsResponse struct {
	// cluster info
	Cluster              *Cluster `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeClusterDetailsResponse) Reset()         { *m = DescribeClusterDetailsResponse{} }
func (m *DescribeClusterDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeClusterDetailsResponse) ProtoMessage()    {}
func (*DescribeClusterDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{17}
}

func (m *DescribeClusterDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeClusterDetailsResponse.Unmarshal(m, b)
}
func (m *DescribeClusterDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeClusterDetailsResponse.Marshal(b, m, deterministic)
}
func (m *DescribeClusterDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeClusterDetailsResponse.Merge(m, src)
}
func (m *DescribeClusterDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeClusterDetailsResponse.Size(m)
}
func (m *DescribeClusterDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeClusterDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeClusterDetailsResponse proto.InternalMessageInfo

func (m *DescribeClusterDetailsResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

type ValidateRuntimeRequest struct {
	// required, id of runtime to validate
	RuntimeId *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	// required, runtime zone
	Zone *wrappers.StringValue `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	// required, runtime credential
	RuntimeCredential *RuntimeCredential `protobuf:"bytes,3,opt,name=runtime_credential,json=runtimeCredential,proto3" json:"runtime_credential,omitempty"`
	// need create or not
	NeedCreate           *wrappers.BoolValue `protobuf:"bytes,4,opt,name=need_create,json=needCreate,proto3" json:"need_create,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ValidateRuntimeRequest) Reset()         { *m = ValidateRuntimeRequest{} }
func (m *ValidateRuntimeRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRuntimeRequest) ProtoMessage()    {}
func (*ValidateRuntimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{18}
}

func (m *ValidateRuntimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRuntimeRequest.Unmarshal(m, b)
}
func (m *ValidateRuntimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRuntimeRequest.Marshal(b, m, deterministic)
}
func (m *ValidateRuntimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRuntimeRequest.Merge(m, src)
}
func (m *ValidateRuntimeRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRuntimeRequest.Size(m)
}
func (m *ValidateRuntimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRuntimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRuntimeRequest proto.InternalMessageInfo

func (m *ValidateRuntimeRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *ValidateRuntimeRequest) GetZone() *wrappers.StringValue {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *ValidateRuntimeRequest) GetRuntimeCredential() *RuntimeCredential {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

func (m *ValidateRuntimeRequest) GetNeedCreate() *wrappers.BoolValue {
	if m != nil {
		return m.NeedCreate
	}
	return nil
}

type ValidateRuntimeResponse struct {
	// validate ok or not
	Ok                   *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ValidateRuntimeResponse) Reset()         { *m = ValidateRuntimeResponse{} }
func (m *ValidateRuntimeResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateRuntimeResponse) ProtoMessage()    {}
func (*ValidateRuntimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{19}
}

func (m *ValidateRuntimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRuntimeResponse.Unmarshal(m, b)
}
func (m *ValidateRuntimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRuntimeResponse.Marshal(b, m, deterministic)
}
func (m *ValidateRuntimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRuntimeResponse.Merge(m, src)
}
func (m *ValidateRuntimeResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateRuntimeResponse.Size(m)
}
func (m *ValidateRuntimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRuntimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRuntimeResponse proto.InternalMessageInfo

func (m *ValidateRuntimeResponse) GetOk() *wrappers.BoolValue {
	if m != nil {
		return m.Ok
	}
	return nil
}

type DescribeZonesRequest struct {
	// required, get zone of runtime provider
	Provider *wrappers.StringValue `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	// required, runtime credential
	RuntimeCredential    *RuntimeCredential `protobuf:"bytes,2,opt,name=runtime_credential,json=runtimeCredential,proto3" json:"runtime_credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DescribeZonesRequest) Reset()         { *m = DescribeZonesRequest{} }
func (m *DescribeZonesRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeZonesRequest) ProtoMessage()    {}
func (*DescribeZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{20}
}

func (m *DescribeZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeZonesRequest.Unmarshal(m, b)
}
func (m *DescribeZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeZonesRequest.Marshal(b, m, deterministic)
}
func (m *DescribeZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeZonesRequest.Merge(m, src)
}
func (m *DescribeZonesRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeZonesRequest.Size(m)
}
func (m *DescribeZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeZonesRequest proto.InternalMessageInfo

func (m *DescribeZonesRequest) GetProvider() *wrappers.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *DescribeZonesRequest) GetRuntimeCredential() *RuntimeCredential {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

type DescribeZonesResponse struct {
	// list of zones in runtime provider
	Zones                []string `protobuf:"bytes,1,rep,name=zones,proto3" json:"zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeZonesResponse) Reset()         { *m = DescribeZonesResponse{} }
func (m *DescribeZonesResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeZonesResponse) ProtoMessage()    {}
func (*DescribeZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2998074df425fa49, []int{21}
}

func (m *DescribeZonesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeZonesResponse.Unmarshal(m, b)
}
func (m *DescribeZonesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeZonesResponse.Marshal(b, m, deterministic)
}
func (m *DescribeZonesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeZonesResponse.Merge(m, src)
}
func (m *DescribeZonesResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeZonesResponse.Size(m)
}
func (m *DescribeZonesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeZonesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeZonesResponse proto.InternalMessageInfo

func (m *DescribeZonesResponse) GetZones() []string {
	if m != nil {
		return m.Zones
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterRuntimeProviderRequest)(nil), "openpitrix.RegisterRuntimeProviderRequest")
	proto.RegisterType((*RegisterRuntimeProviderResponse)(nil), "openpitrix.RegisterRuntimeProviderResponse")
	proto.RegisterType((*ParseClusterConfRequest)(nil), "openpitrix.ParseClusterConfRequest")
	proto.RegisterType((*ParseClusterConfResponse)(nil), "openpitrix.ParseClusterConfResponse")
	proto.RegisterType((*SplitJobIntoTasksRequest)(nil), "openpitrix.SplitJobIntoTasksRequest")
	proto.RegisterType((*SplitJobIntoTasksResponse)(nil), "openpitrix.SplitJobIntoTasksResponse")
	proto.RegisterType((*HandleSubtaskRequest)(nil), "openpitrix.HandleSubtaskRequest")
	proto.RegisterType((*HandleSubtaskResponse)(nil), "openpitrix.HandleSubtaskResponse")
	proto.RegisterType((*WaitSubtaskRequest)(nil), "openpitrix.WaitSubtaskRequest")
	proto.RegisterType((*WaitSubtaskResponse)(nil), "openpitrix.WaitSubtaskResponse")
	proto.RegisterType((*CheckResourceRequest)(nil), "openpitrix.CheckResourceRequest")
	proto.RegisterType((*CheckResourceResponse)(nil), "openpitrix.CheckResourceResponse")
	proto.RegisterType((*DescribeVpcRequest)(nil), "openpitrix.DescribeVpcRequest")
	proto.RegisterType((*Eip)(nil), "openpitrix.Eip")
	proto.RegisterType((*Vpc)(nil), "openpitrix.Vpc")
	proto.RegisterType((*DescribeVpcResponse)(nil), "openpitrix.DescribeVpcResponse")
	proto.RegisterType((*DescribeClusterDetailsRequest)(nil), "openpitrix.DescribeClusterDetailsRequest")
	proto.RegisterType((*DescribeClusterDetailsResponse)(nil), "openpitrix.DescribeClusterDetailsResponse")
	proto.RegisterType((*ValidateRuntimeRequest)(nil), "openpitrix.ValidateRuntimeRequest")
	proto.RegisterType((*ValidateRuntimeResponse)(nil), "openpitrix.ValidateRuntimeResponse")
	proto.RegisterType((*DescribeZonesRequest)(nil), "openpitrix.DescribeZonesRequest")
	proto.RegisterType((*DescribeZonesResponse)(nil), "openpitrix.DescribeZonesResponse")
}

func init() { proto.RegisterFile("runtime_provider.proto", fileDescriptor_2998074df425fa49) }

var fileDescriptor_2998074df425fa49 = []byte{
	// 1059 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcf, 0x6f, 0xdb, 0x36,
	0x14, 0x86, 0xec, 0xfc, 0x7c, 0x41, 0xd0, 0x44, 0xf9, 0xa5, 0x09, 0x6d, 0x7e, 0xa8, 0x1d, 0xd0,
	0x65, 0x8b, 0x53, 0x34, 0x3b, 0x14, 0x08, 0xb6, 0x43, 0xdd, 0x00, 0x73, 0xd1, 0x76, 0x81, 0x62,
	0x64, 0x40, 0x80, 0x21, 0xa3, 0x24, 0xc6, 0x63, 0xe3, 0x90, 0x1c, 0x49, 0x3b, 0x6b, 0x8f, 0x3b,
	0xec, 0xb2, 0xcb, 0xb0, 0xd3, 0x4e, 0xbd, 0xee, 0x1f, 0xdc, 0x1f, 0x30, 0x50, 0xa2, 0x62, 0x49,
	0x96, 0x3d, 0xcd, 0x33, 0xb6, 0x53, 0x62, 0xf1, 0xfb, 0x1e, 0xdf, 0xf7, 0xf1, 0xf1, 0xf1, 0xc1,
	0xa6, 0xe8, 0x51, 0x45, 0x6e, 0xf0, 0x25, 0x17, 0xac, 0x4f, 0x22, 0x2c, 0x1a, 0x5c, 0x30, 0xc5,
	0x6c, 0x60, 0x1c, 0x53, 0x4e, 0x94, 0x20, 0x3f, 0xba, 0xdb, 0x1d, 0xc6, 0x3a, 0x5d, 0x7c, 0x18,
	0xaf, 0x04, 0xbd, 0xab, 0xc3, 0x5b, 0x81, 0x38, 0xc7, 0x42, 0x26, 0x58, 0x77, 0xa7, 0xb8, 0xae,
	0x03, 0x4a, 0x85, 0x6e, 0xb8, 0x01, 0xdc, 0x37, 0x00, 0xc4, 0xc9, 0x21, 0xa2, 0x94, 0x29, 0xa4,
	0x08, 0xa3, 0x29, 0xfd, 0xb3, 0xf8, 0x4f, 0x78, 0xd0, 0xc1, 0xf4, 0x40, 0xde, 0xa2, 0x4e, 0x07,
	0x8b, 0x43, 0xc6, 0x63, 0x44, 0x09, 0x7a, 0x39, 0xec, 0xf6, 0xa4, 0x4a, 0xf3, 0x74, 0x97, 0x4d,
	0xfe, 0xe6, 0xe7, 0xe2, 0x5b, 0x16, 0x98, 0x7f, 0x41, 0x21, 0x79, 0x9d, 0xfc, 0xef, 0xfd, 0x6a,
	0xc1, 0xb6, 0x8f, 0x3b, 0x44, 0x13, 0xfd, 0x84, 0x70, 0x6a, 0xf4, 0xfa, 0xf8, 0x87, 0x1e, 0x96,
	0xca, 0x7e, 0x06, 0x0b, 0xa9, 0x05, 0x8e, 0xb5, 0x6b, 0x3d, 0x5e, 0x7a, 0x7a, 0xbf, 0x91, 0xa4,
	0xdd, 0x48, 0x75, 0x35, 0xce, 0x94, 0x20, 0xb4, 0x73, 0x8e, 0xba, 0x3d, 0xec, 0xdf, 0xa1, 0xed,
	0xcf, 0x61, 0x2e, 0x64, 0xf4, 0x8a, 0x74, 0x9c, 0x5a, 0x05, 0x9e, 0xc1, 0x7a, 0xaf, 0x61, 0x67,
	0x64, 0x46, 0x92, 0x33, 0x2a, 0xb1, 0xbd, 0x0f, 0x35, 0x76, 0x6d, 0x92, 0x71, 0x87, 0x82, 0x3e,
	0x67, 0xac, 0x9b, 0x84, 0xac, 0xb1, 0x6b, 0xef, 0x4f, 0x0b, 0xb6, 0x4e, 0x91, 0x90, 0xb8, 0x99,
	0xd8, 0xd3, 0x64, 0xf4, 0x2a, 0x95, 0x76, 0x0c, 0x90, 0x9e, 0x32, 0x89, 0x2a, 0x89, 0x5b, 0x34,
	0xf8, 0x56, 0xa4, 0xc9, 0x7d, 0x2c, 0x24, 0x61, 0x54, 0x93, 0xab, 0x28, 0x5c, 0x34, 0xf8, 0x56,
	0x64, 0x3f, 0x81, 0x19, 0x2d, 0xd7, 0xa9, 0x57, 0xa0, 0xc5, 0x48, 0xfb, 0x00, 0xe6, 0xcd, 0x01,
	0x3b, 0x33, 0x31, 0x69, 0xad, 0x31, 0xa8, 0xc4, 0x86, 0x11, 0xe7, 0xa7, 0x18, 0xaf, 0x05, 0xce,
	0xb0, 0x6a, 0x63, 0x5f, 0x26, 0x94, 0x55, 0x21, 0xd4, 0x7b, 0x70, 0xce, 0x78, 0x97, 0xa8, 0x97,
	0x2c, 0x68, 0x51, 0xc5, 0xda, 0x48, 0x5e, 0xcb, 0xa9, 0x38, 0xb8, 0x07, 0xf5, 0xb7, 0x2c, 0x30,
	0xd6, 0xdd, 0xcb, 0xe6, 0xf0, 0x92, 0x05, 0xbe, 0x5e, 0xf3, 0x4e, 0xe1, 0xa3, 0x92, 0xbd, 0x8d,
	0x8e, 0x23, 0x58, 0xd4, 0xa5, 0xfc, 0x0a, 0xbd, 0xbb, 0x53, 0xb2, 0x91, 0x8d, 0xd2, 0x4e, 0x17,
	0xfd, 0x01, 0xce, 0x7b, 0x07, 0xeb, 0x5f, 0x21, 0x1a, 0x75, 0xf1, 0x59, 0x2f, 0xd0, 0x5f, 0xa7,
	0xa2, 0xe4, 0x11, 0xcc, 0xe8, 0x58, 0x46, 0xca, 0x4a, 0x31, 0x09, 0x3f, 0x5e, 0xf5, 0xbe, 0x80,
	0x8d, 0xc2, 0xd6, 0x46, 0x48, 0x4a, 0xb7, 0xc6, 0xd2, 0x6f, 0xc1, 0xfe, 0x06, 0x11, 0xf5, 0xdf,
	0xe7, 0x7d, 0x0c, 0x6b, 0xb9, 0x8d, 0xff, 0x51, 0xd6, 0x3f, 0x59, 0xb0, 0xde, 0xfc, 0x1e, 0x87,
	0x9a, 0xc7, 0x7a, 0x22, 0xc4, 0x53, 0x49, 0x3c, 0x53, 0xc2, 0xb5, 0x0a, 0x25, 0xdc, 0x84, 0x8d,
	0x42, 0x0e, 0x13, 0x74, 0x92, 0x9f, 0x2d, 0xb0, 0x5f, 0x60, 0x19, 0x0a, 0x12, 0xe0, 0x73, 0x1e,
	0x4e, 0x45, 0xc7, 0x11, 0xcc, 0xf5, 0x79, 0x58, 0xb5, 0x81, 0xcc, 0xf6, 0x79, 0xd8, 0x8a, 0xbc,
	0x0f, 0x16, 0xd4, 0x4f, 0x08, 0xd7, 0x64, 0x4c, 0x78, 0xd5, 0x5d, 0x67, 0x31, 0xe1, 0x49, 0xe7,
	0xa1, 0xe8, 0x06, 0x57, 0xda, 0x2f, 0x46, 0x6a, 0x06, 0x8a, 0x22, 0x51, 0xad, 0x57, 0x69, 0xa4,
	0xf7, 0x47, 0x1d, 0xea, 0xe7, 0x3c, 0xcc, 0xa8, 0xb3, 0x2a, 0xab, 0x9b, 0x20, 0xc1, 0x63, 0x58,
	0x0a, 0x05, 0x46, 0x0a, 0x5f, 0x6a, 0x57, 0x4d, 0x9e, 0xc3, 0xa7, 0xd9, 0x4e, 0x1f, 0x5f, 0x1f,
	0x12, 0xb8, 0xfe, 0x60, 0x7f, 0x09, 0x4b, 0x51, 0x7c, 0xa8, 0xf1, 0xc3, 0x6a, 0x7a, 0xeb, 0xf8,
	0x5d, 0xb3, 0x04, 0xfd, 0xc8, 0x49, 0x85, 0x54, 0x4f, 0x3a, 0xb3, 0x55, 0x1e, 0xb9, 0x04, 0x6b,
	0xb7, 0x60, 0x55, 0x09, 0x44, 0x25, 0xd1, 0x31, 0x2e, 0x4d, 0x80, 0xb9, 0x0a, 0x01, 0x56, 0x06,
	0xb4, 0xb3, 0x24, 0x94, 0x03, 0xf3, 0xb2, 0x17, 0x50, 0xac, 0xa4, 0x33, 0xbf, 0x5b, 0x7f, 0xbc,
	0xe8, 0xa7, 0x3f, 0x75, 0x7f, 0xc5, 0x84, 0x3b, 0x0b, 0xc3, 0xfd, 0xf5, 0x84, 0x70, 0x5f, 0xaf,
	0x79, 0xcf, 0x60, 0x2d, 0x57, 0xd2, 0xe6, 0x5a, 0xec, 0x41, 0xbd, 0xcf, 0x43, 0x73, 0x6a, 0x39,
	0xa6, 0x46, 0xe9, 0x35, 0xef, 0x17, 0x0b, 0x1e, 0xa4, 0x54, 0x73, 0xdf, 0x5e, 0x60, 0x85, 0x48,
	0x57, 0xfe, 0x1f, 0x17, 0xfc, 0x6b, 0xd8, 0x1e, 0x95, 0xcc, 0x64, 0x8f, 0xde, 0x6f, 0x35, 0xd8,
	0x3c, 0x47, 0x5d, 0x12, 0x21, 0x85, 0xcd, 0x18, 0x32, 0x15, 0x5d, 0x4f, 0x60, 0xe6, 0x3d, 0xa3,
	0x15, 0xab, 0x5b, 0x23, 0xed, 0x57, 0x60, 0xa7, 0xdb, 0x85, 0x02, 0x47, 0x98, 0x2a, 0x82, 0xba,
	0xa6, 0xc8, 0x1f, 0x64, 0x35, 0x98, 0x34, 0x9b, 0x77, 0x20, 0x7f, 0x55, 0x14, 0x3f, 0xe9, 0xbb,
	0x42, 0x31, 0x8e, 0x2e, 0x93, 0x1b, 0x60, 0xca, 0x7d, 0x5c, 0xe7, 0x03, 0x0d, 0x6f, 0xc6, 0x68,
	0xef, 0x04, 0xb6, 0x86, 0x3c, 0x99, 0xa0, 0x91, 0x7e, 0xb0, 0x60, 0x3d, 0x3d, 0xad, 0x0b, 0x46,
	0xb1, 0xfc, 0xf7, 0xa3, 0x66, 0xb9, 0x49, 0xb5, 0xc9, 0x4c, 0xf2, 0x0e, 0x60, 0xa3, 0x90, 0x9f,
	0x51, 0xb9, 0x0e, 0xb3, 0xfa, 0x4c, 0xa4, 0x63, 0xc5, 0x37, 0x2d, 0xf9, 0xf1, 0xf4, 0xf7, 0x05,
	0xd8, 0x2c, 0x8c, 0xaa, 0xaf, 0x11, 0x45, 0x1d, 0x2c, 0x6c, 0x01, 0x5b, 0x23, 0x86, 0x59, 0x7b,
	0x3f, 0x97, 0xd6, 0xd8, 0x19, 0xdc, 0xfd, 0xb4, 0x12, 0xd6, 0x24, 0xf9, 0x2d, 0xac, 0x14, 0x47,
	0x3f, 0xfb, 0x61, 0x36, 0xc0, 0x88, 0x71, 0xd8, 0x7d, 0x34, 0x1e, 0x64, 0xc2, 0x7f, 0x07, 0xab,
	0x43, 0x23, 0x99, 0x9d, 0xa3, 0x8e, 0x9a, 0x16, 0xdd, 0x8f, 0xff, 0x06, 0x65, 0x76, 0x68, 0xc3,
	0x72, 0x6e, 0x4e, 0xb2, 0x77, 0xb3, 0xbc, 0xb2, 0xe9, 0xcd, 0xdd, 0x1b, 0x83, 0x30, 0x51, 0xdf,
	0xc0, 0x52, 0x66, 0x8a, 0xb1, 0xb7, 0xb3, 0x8c, 0xe1, 0xb9, 0xca, 0xdd, 0x19, 0xb9, 0x6e, 0xe2,
	0x5d, 0xc0, 0xbd, 0xb4, 0x48, 0xce, 0x4c, 0xc3, 0xf5, 0xb2, 0x9c, 0xc2, 0x62, 0x1a, 0xf7, 0xe1,
	0x58, 0xcc, 0xc0, 0x81, 0xdc, 0xbc, 0x92, 0x77, 0xa0, 0x6c, 0x9c, 0xca, 0x3b, 0x50, 0x3e, 0xec,
	0xbc, 0x81, 0xa5, 0x4c, 0xb3, 0xcf, 0x3b, 0x30, 0x3c, 0xd8, 0xe4, 0x1d, 0x28, 0x7b, 0x25, 0x18,
	0x6c, 0x96, 0x37, 0x5d, 0xfb, 0x93, 0x32, 0x6a, 0xe9, 0x2b, 0xe1, 0xee, 0x57, 0x81, 0x0e, 0x2c,
	0x2f, 0xf4, 0x9f, 0xbc, 0xe5, 0xe5, 0x0d, 0x3b, 0x6f, 0xf9, 0xa8, 0x06, 0xd6, 0x86, 0xe5, 0xdc,
	0x9d, 0xcf, 0x5b, 0x5e, 0xd6, 0xae, 0xf2, 0x96, 0x97, 0x36, 0x8c, 0xe7, 0x33, 0x17, 0x35, 0x1e,
	0x04, 0x73, 0x71, 0xf7, 0x3a, 0xfa, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x66, 0xae, 0xc1, 0x8e, 0x54,
	0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuntimeProviderManagerClient is the client API for RuntimeProviderManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuntimeProviderManagerClient interface {
	RegisterRuntimeProvider(ctx context.Context, in *RegisterRuntimeProviderRequest, opts ...grpc.CallOption) (*RegisterRuntimeProviderResponse, error)
	// cluster
	ParseClusterConf(ctx context.Context, in *ParseClusterConfRequest, opts ...grpc.CallOption) (*ParseClusterConfResponse, error)
	SplitJobIntoTasks(ctx context.Context, in *SplitJobIntoTasksRequest, opts ...grpc.CallOption) (*SplitJobIntoTasksResponse, error)
	HandleSubtask(ctx context.Context, in *HandleSubtaskRequest, opts ...grpc.CallOption) (*HandleSubtaskResponse, error)
	WaitSubtask(ctx context.Context, in *WaitSubtaskRequest, opts ...grpc.CallOption) (*WaitSubtaskResponse, error)
	DescribeSubnets(ctx context.Context, in *DescribeSubnetsRequest, opts ...grpc.CallOption) (*DescribeSubnetsResponse, error)
	CheckResource(ctx context.Context, in *CheckResourceRequest, opts ...grpc.CallOption) (*CheckResourceResponse, error)
	DescribeVpc(ctx context.Context, in *DescribeVpcRequest, opts ...grpc.CallOption) (*DescribeVpcResponse, error)
	DescribeClusterDetails(ctx context.Context, in *DescribeClusterDetailsRequest, opts ...grpc.CallOption) (*DescribeClusterDetailsResponse, error)
	// runtime
	ValidateRuntime(ctx context.Context, in *ValidateRuntimeRequest, opts ...grpc.CallOption) (*ValidateRuntimeResponse, error)
	DescribeZones(ctx context.Context, in *DescribeZonesRequest, opts ...grpc.CallOption) (*DescribeZonesResponse, error)
}

type runtimeProviderManagerClient struct {
	cc *grpc.ClientConn
}

func NewRuntimeProviderManagerClient(cc *grpc.ClientConn) RuntimeProviderManagerClient {
	return &runtimeProviderManagerClient{cc}
}

func (c *runtimeProviderManagerClient) RegisterRuntimeProvider(ctx context.Context, in *RegisterRuntimeProviderRequest, opts ...grpc.CallOption) (*RegisterRuntimeProviderResponse, error) {
	out := new(RegisterRuntimeProviderResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/RegisterRuntimeProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) ParseClusterConf(ctx context.Context, in *ParseClusterConfRequest, opts ...grpc.CallOption) (*ParseClusterConfResponse, error) {
	out := new(ParseClusterConfResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/ParseClusterConf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) SplitJobIntoTasks(ctx context.Context, in *SplitJobIntoTasksRequest, opts ...grpc.CallOption) (*SplitJobIntoTasksResponse, error) {
	out := new(SplitJobIntoTasksResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/SplitJobIntoTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) HandleSubtask(ctx context.Context, in *HandleSubtaskRequest, opts ...grpc.CallOption) (*HandleSubtaskResponse, error) {
	out := new(HandleSubtaskResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/HandleSubtask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) WaitSubtask(ctx context.Context, in *WaitSubtaskRequest, opts ...grpc.CallOption) (*WaitSubtaskResponse, error) {
	out := new(WaitSubtaskResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/WaitSubtask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) DescribeSubnets(ctx context.Context, in *DescribeSubnetsRequest, opts ...grpc.CallOption) (*DescribeSubnetsResponse, error) {
	out := new(DescribeSubnetsResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/DescribeSubnets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) CheckResource(ctx context.Context, in *CheckResourceRequest, opts ...grpc.CallOption) (*CheckResourceResponse, error) {
	out := new(CheckResourceResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/CheckResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) DescribeVpc(ctx context.Context, in *DescribeVpcRequest, opts ...grpc.CallOption) (*DescribeVpcResponse, error) {
	out := new(DescribeVpcResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/DescribeVpc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) DescribeClusterDetails(ctx context.Context, in *DescribeClusterDetailsRequest, opts ...grpc.CallOption) (*DescribeClusterDetailsResponse, error) {
	out := new(DescribeClusterDetailsResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/DescribeClusterDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) ValidateRuntime(ctx context.Context, in *ValidateRuntimeRequest, opts ...grpc.CallOption) (*ValidateRuntimeResponse, error) {
	out := new(ValidateRuntimeResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/ValidateRuntime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeProviderManagerClient) DescribeZones(ctx context.Context, in *DescribeZonesRequest, opts ...grpc.CallOption) (*DescribeZonesResponse, error) {
	out := new(DescribeZonesResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeProviderManager/DescribeZones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuntimeProviderManagerServer is the server API for RuntimeProviderManager service.
type RuntimeProviderManagerServer interface {
	RegisterRuntimeProvider(context.Context, *RegisterRuntimeProviderRequest) (*RegisterRuntimeProviderResponse, error)
	// cluster
	ParseClusterConf(context.Context, *ParseClusterConfRequest) (*ParseClusterConfResponse, error)
	SplitJobIntoTasks(context.Context, *SplitJobIntoTasksRequest) (*SplitJobIntoTasksResponse, error)
	HandleSubtask(context.Context, *HandleSubtaskRequest) (*HandleSubtaskResponse, error)
	WaitSubtask(context.Context, *WaitSubtaskRequest) (*WaitSubtaskResponse, error)
	DescribeSubnets(context.Context, *DescribeSubnetsRequest) (*DescribeSubnetsResponse, error)
	CheckResource(context.Context, *CheckResourceRequest) (*CheckResourceResponse, error)
	DescribeVpc(context.Context, *DescribeVpcRequest) (*DescribeVpcResponse, error)
	DescribeClusterDetails(context.Context, *DescribeClusterDetailsRequest) (*DescribeClusterDetailsResponse, error)
	// runtime
	ValidateRuntime(context.Context, *ValidateRuntimeRequest) (*ValidateRuntimeResponse, error)
	DescribeZones(context.Context, *DescribeZonesRequest) (*DescribeZonesResponse, error)
}

// UnimplementedRuntimeProviderManagerServer can be embedded to have forward compatible implementations.
type UnimplementedRuntimeProviderManagerServer struct {
}

func (*UnimplementedRuntimeProviderManagerServer) RegisterRuntimeProvider(ctx context.Context, req *RegisterRuntimeProviderRequest) (*RegisterRuntimeProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterRuntimeProvider not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) ParseClusterConf(ctx context.Context, req *ParseClusterConfRequest) (*ParseClusterConfResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParseClusterConf not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) SplitJobIntoTasks(ctx context.Context, req *SplitJobIntoTasksRequest) (*SplitJobIntoTasksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SplitJobIntoTasks not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) HandleSubtask(ctx context.Context, req *HandleSubtaskRequest) (*HandleSubtaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleSubtask not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) WaitSubtask(ctx context.Context, req *WaitSubtaskRequest) (*WaitSubtaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WaitSubtask not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) DescribeSubnets(ctx context.Context, req *DescribeSubnetsRequest) (*DescribeSubnetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeSubnets not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) CheckResource(ctx context.Context, req *CheckResourceRequest) (*CheckResourceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckResource not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) DescribeVpc(ctx context.Context, req *DescribeVpcRequest) (*DescribeVpcResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeVpc not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) DescribeClusterDetails(ctx context.Context, req *DescribeClusterDetailsRequest) (*DescribeClusterDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeClusterDetails not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) ValidateRuntime(ctx context.Context, req *ValidateRuntimeRequest) (*ValidateRuntimeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateRuntime not implemented")
}
func (*UnimplementedRuntimeProviderManagerServer) DescribeZones(ctx context.Context, req *DescribeZonesRequest) (*DescribeZonesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeZones not implemented")
}

func RegisterRuntimeProviderManagerServer(s *grpc.Server, srv RuntimeProviderManagerServer) {
	s.RegisterService(&_RuntimeProviderManager_serviceDesc, srv)
}

func _RuntimeProviderManager_RegisterRuntimeProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRuntimeProviderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).RegisterRuntimeProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/RegisterRuntimeProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).RegisterRuntimeProvider(ctx, req.(*RegisterRuntimeProviderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_ParseClusterConf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParseClusterConfRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).ParseClusterConf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/ParseClusterConf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).ParseClusterConf(ctx, req.(*ParseClusterConfRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_SplitJobIntoTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SplitJobIntoTasksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).SplitJobIntoTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/SplitJobIntoTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).SplitJobIntoTasks(ctx, req.(*SplitJobIntoTasksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_HandleSubtask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleSubtaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).HandleSubtask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/HandleSubtask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).HandleSubtask(ctx, req.(*HandleSubtaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_WaitSubtask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WaitSubtaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).WaitSubtask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/WaitSubtask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).WaitSubtask(ctx, req.(*WaitSubtaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_DescribeSubnets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeSubnetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).DescribeSubnets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/DescribeSubnets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).DescribeSubnets(ctx, req.(*DescribeSubnetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_CheckResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).CheckResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/CheckResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).CheckResource(ctx, req.(*CheckResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_DescribeVpc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeVpcRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).DescribeVpc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/DescribeVpc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).DescribeVpc(ctx, req.(*DescribeVpcRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_DescribeClusterDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeClusterDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).DescribeClusterDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/DescribeClusterDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).DescribeClusterDetails(ctx, req.(*DescribeClusterDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_ValidateRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRuntimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).ValidateRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/ValidateRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).ValidateRuntime(ctx, req.(*ValidateRuntimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeProviderManager_DescribeZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeProviderManagerServer).DescribeZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeProviderManager/DescribeZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeProviderManagerServer).DescribeZones(ctx, req.(*DescribeZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuntimeProviderManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.RuntimeProviderManager",
	HandlerType: (*RuntimeProviderManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterRuntimeProvider",
			Handler:    _RuntimeProviderManager_RegisterRuntimeProvider_Handler,
		},
		{
			MethodName: "ParseClusterConf",
			Handler:    _RuntimeProviderManager_ParseClusterConf_Handler,
		},
		{
			MethodName: "SplitJobIntoTasks",
			Handler:    _RuntimeProviderManager_SplitJobIntoTasks_Handler,
		},
		{
			MethodName: "HandleSubtask",
			Handler:    _RuntimeProviderManager_HandleSubtask_Handler,
		},
		{
			MethodName: "WaitSubtask",
			Handler:    _RuntimeProviderManager_WaitSubtask_Handler,
		},
		{
			MethodName: "DescribeSubnets",
			Handler:    _RuntimeProviderManager_DescribeSubnets_Handler,
		},
		{
			MethodName: "CheckResource",
			Handler:    _RuntimeProviderManager_CheckResource_Handler,
		},
		{
			MethodName: "DescribeVpc",
			Handler:    _RuntimeProviderManager_DescribeVpc_Handler,
		},
		{
			MethodName: "DescribeClusterDetails",
			Handler:    _RuntimeProviderManager_DescribeClusterDetails_Handler,
		},
		{
			MethodName: "ValidateRuntime",
			Handler:    _RuntimeProviderManager_ValidateRuntime_Handler,
		},
		{
			MethodName: "DescribeZones",
			Handler:    _RuntimeProviderManager_DescribeZones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "runtime_provider.proto",
}
