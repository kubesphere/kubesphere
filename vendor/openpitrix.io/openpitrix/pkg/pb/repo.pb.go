// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repo.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRepoRequest struct {
	// required, repository name
	Name *wrappers.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// repository description
	Description *wrappers.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// repository type
	Type *wrappers.StringValue `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// required, url of visiting the repository
	Url *wrappers.StringValue `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// required, credential of visiting the repository
	Credential *wrappers.StringValue `protobuf:"bytes,5,opt,name=credential,proto3" json:"credential,omitempty"`
	// required, visibility eg:[public|private]
	Visibility *wrappers.StringValue `protobuf:"bytes,6,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// required, runtime provider eg.[qingcloud|aliyun|aws|kubernetes]
	Providers []string `protobuf:"bytes,7,rep,name=providers,proto3" json:"providers,omitempty"`
	// a kv string, tags of server
	Labels *wrappers.StringValue `protobuf:"bytes,8,opt,name=labels,proto3" json:"labels,omitempty"`
	// selectors of label
	Selectors *wrappers.StringValue `protobuf:"bytes,9,opt,name=selectors,proto3" json:"selectors,omitempty"`
	// category id
	CategoryId *wrappers.StringValue `protobuf:"bytes,10,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	// required app default status.eg:[draft|active]
	AppDefaultStatus     *wrappers.StringValue `protobuf:"bytes,11,opt,name=app_default_status,json=appDefaultStatus,proto3" json:"app_default_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateRepoRequest) Reset()         { *m = CreateRepoRequest{} }
func (m *CreateRepoRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRepoRequest) ProtoMessage()    {}
func (*CreateRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{0}
}

func (m *CreateRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepoRequest.Unmarshal(m, b)
}
func (m *CreateRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepoRequest.Marshal(b, m, deterministic)
}
func (m *CreateRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepoRequest.Merge(m, src)
}
func (m *CreateRepoRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRepoRequest.Size(m)
}
func (m *CreateRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepoRequest proto.InternalMessageInfo

func (m *CreateRepoRequest) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateRepoRequest) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CreateRepoRequest) GetType() *wrappers.StringValue {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *CreateRepoRequest) GetUrl() *wrappers.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *CreateRepoRequest) GetCredential() *wrappers.StringValue {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *CreateRepoRequest) GetVisibility() *wrappers.StringValue {
	if m != nil {
		return m.Visibility
	}
	return nil
}

func (m *CreateRepoRequest) GetProviders() []string {
	if m != nil {
		return m.Providers
	}
	return nil
}

func (m *CreateRepoRequest) GetLabels() *wrappers.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateRepoRequest) GetSelectors() *wrappers.StringValue {
	if m != nil {
		return m.Selectors
	}
	return nil
}

func (m *CreateRepoRequest) GetCategoryId() *wrappers.StringValue {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

func (m *CreateRepoRequest) GetAppDefaultStatus() *wrappers.StringValue {
	if m != nil {
		return m.AppDefaultStatus
	}
	return nil
}

type CreateRepoResponse struct {
	// id of repository created
	RepoId               *wrappers.StringValue `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateRepoResponse) Reset()         { *m = CreateRepoResponse{} }
func (m *CreateRepoResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRepoResponse) ProtoMessage()    {}
func (*CreateRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{1}
}

func (m *CreateRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepoResponse.Unmarshal(m, b)
}
func (m *CreateRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepoResponse.Marshal(b, m, deterministic)
}
func (m *CreateRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepoResponse.Merge(m, src)
}
func (m *CreateRepoResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRepoResponse.Size(m)
}
func (m *CreateRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepoResponse proto.InternalMessageInfo

func (m *CreateRepoResponse) GetRepoId() *wrappers.StringValue {
	if m != nil {
		return m.RepoId
	}
	return nil
}

type ModifyRepoRequest struct {
	// required, id of repository to modify
	RepoId *wrappers.StringValue `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	// repository name
	Name *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// repository description
	Description *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// repository type
	Type *wrappers.StringValue `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// url of visiting the repository
	Url *wrappers.StringValue `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// credential of visiting the repository
	Credential *wrappers.StringValue `protobuf:"bytes,6,opt,name=credential,proto3" json:"credential,omitempty"`
	// visibility eg:[public|private]
	Visibility *wrappers.StringValue `protobuf:"bytes,7,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// runtime provider eg.[qingcloud|aliyun|aws|kubernetes]
	Providers []string `protobuf:"bytes,8,rep,name=providers,proto3" json:"providers,omitempty"`
	// a kv string, tags of server
	Labels *wrappers.StringValue `protobuf:"bytes,9,opt,name=labels,proto3" json:"labels,omitempty"`
	// selectors of label
	Selectors *wrappers.StringValue `protobuf:"bytes,10,opt,name=selectors,proto3" json:"selectors,omitempty"`
	// category id
	CategoryId *wrappers.StringValue `protobuf:"bytes,11,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	// app default status eg:[draft|active]
	AppDefaultStatus     *wrappers.StringValue `protobuf:"bytes,12,opt,name=app_default_status,json=appDefaultStatus,proto3" json:"app_default_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ModifyRepoRequest) Reset()         { *m = ModifyRepoRequest{} }
func (m *ModifyRepoRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyRepoRequest) ProtoMessage()    {}
func (*ModifyRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{2}
}

func (m *ModifyRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyRepoRequest.Unmarshal(m, b)
}
func (m *ModifyRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyRepoRequest.Marshal(b, m, deterministic)
}
func (m *ModifyRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyRepoRequest.Merge(m, src)
}
func (m *ModifyRepoRequest) XXX_Size() int {
	return xxx_messageInfo_ModifyRepoRequest.Size(m)
}
func (m *ModifyRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyRepoRequest proto.InternalMessageInfo

func (m *ModifyRepoRequest) GetRepoId() *wrappers.StringValue {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *ModifyRepoRequest) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyRepoRequest) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ModifyRepoRequest) GetType() *wrappers.StringValue {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ModifyRepoRequest) GetUrl() *wrappers.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *ModifyRepoRequest) GetCredential() *wrappers.StringValue {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *ModifyRepoRequest) GetVisibility() *wrappers.StringValue {
	if m != nil {
		return m.Visibility
	}
	return nil
}

func (m *ModifyRepoRequest) GetProviders() []string {
	if m != nil {
		return m.Providers
	}
	return nil
}

func (m *ModifyRepoRequest) GetLabels() *wrappers.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *ModifyRepoRequest) GetSelectors() *wrappers.StringValue {
	if m != nil {
		return m.Selectors
	}
	return nil
}

func (m *ModifyRepoRequest) GetCategoryId() *wrappers.StringValue {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

func (m *ModifyRepoRequest) GetAppDefaultStatus() *wrappers.StringValue {
	if m != nil {
		return m.AppDefaultStatus
	}
	return nil
}

type ModifyRepoResponse struct {
	// id of repository modified
	RepoId               *wrappers.StringValue `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ModifyRepoResponse) Reset()         { *m = ModifyRepoResponse{} }
func (m *ModifyRepoResponse) String() string { return proto.CompactTextString(m) }
func (*ModifyRepoResponse) ProtoMessage()    {}
func (*ModifyRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{3}
}

func (m *ModifyRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyRepoResponse.Unmarshal(m, b)
}
func (m *ModifyRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyRepoResponse.Marshal(b, m, deterministic)
}
func (m *ModifyRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyRepoResponse.Merge(m, src)
}
func (m *ModifyRepoResponse) XXX_Size() int {
	return xxx_messageInfo_ModifyRepoResponse.Size(m)
}
func (m *ModifyRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyRepoResponse proto.InternalMessageInfo

func (m *ModifyRepoResponse) GetRepoId() *wrappers.StringValue {
	if m != nil {
		return m.RepoId
	}
	return nil
}

type DeleteReposRequest struct {
	// required, ids of repository to delete
	RepoId               []string `protobuf:"bytes,1,rep,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReposRequest) Reset()         { *m = DeleteReposRequest{} }
func (m *DeleteReposRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReposRequest) ProtoMessage()    {}
func (*DeleteReposRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{4}
}

func (m *DeleteReposRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReposRequest.Unmarshal(m, b)
}
func (m *DeleteReposRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReposRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReposRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReposRequest.Merge(m, src)
}
func (m *DeleteReposRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReposRequest.Size(m)
}
func (m *DeleteReposRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReposRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReposRequest proto.InternalMessageInfo

func (m *DeleteReposRequest) GetRepoId() []string {
	if m != nil {
		return m.RepoId
	}
	return nil
}

type DeleteReposResponse struct {
	// ids of repository deleted
	RepoId               []string `protobuf:"bytes,1,rep,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReposResponse) Reset()         { *m = DeleteReposResponse{} }
func (m *DeleteReposResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteReposResponse) ProtoMessage()    {}
func (*DeleteReposResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{5}
}

func (m *DeleteReposResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReposResponse.Unmarshal(m, b)
}
func (m *DeleteReposResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReposResponse.Marshal(b, m, deterministic)
}
func (m *DeleteReposResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReposResponse.Merge(m, src)
}
func (m *DeleteReposResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteReposResponse.Size(m)
}
func (m *DeleteReposResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReposResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReposResponse proto.InternalMessageInfo

func (m *DeleteReposResponse) GetRepoId() []string {
	if m != nil {
		return m.RepoId
	}
	return nil
}

type RepoLabel struct {
	// label key
	LabelKey *wrappers.StringValue `protobuf:"bytes,1,opt,name=label_key,json=labelKey,proto3" json:"label_key,omitempty"`
	// label value
	LabelValue *wrappers.StringValue `protobuf:"bytes,2,opt,name=label_value,json=labelValue,proto3" json:"label_value,omitempty"`
	// the time when repository label create
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RepoLabel) Reset()         { *m = RepoLabel{} }
func (m *RepoLabel) String() string { return proto.CompactTextString(m) }
func (*RepoLabel) ProtoMessage()    {}
func (*RepoLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{6}
}

func (m *RepoLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepoLabel.Unmarshal(m, b)
}
func (m *RepoLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepoLabel.Marshal(b, m, deterministic)
}
func (m *RepoLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepoLabel.Merge(m, src)
}
func (m *RepoLabel) XXX_Size() int {
	return xxx_messageInfo_RepoLabel.Size(m)
}
func (m *RepoLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_RepoLabel.DiscardUnknown(m)
}

var xxx_messageInfo_RepoLabel proto.InternalMessageInfo

func (m *RepoLabel) GetLabelKey() *wrappers.StringValue {
	if m != nil {
		return m.LabelKey
	}
	return nil
}

func (m *RepoLabel) GetLabelValue() *wrappers.StringValue {
	if m != nil {
		return m.LabelValue
	}
	return nil
}

func (m *RepoLabel) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type RepoSelector struct {
	// selector key
	SelectorKey *wrappers.StringValue `protobuf:"bytes,1,opt,name=selector_key,json=selectorKey,proto3" json:"selector_key,omitempty"`
	// selector value
	SelectorValue *wrappers.StringValue `protobuf:"bytes,2,opt,name=selector_value,json=selectorValue,proto3" json:"selector_value,omitempty"`
	// the time when repository selector create
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RepoSelector) Reset()         { *m = RepoSelector{} }
func (m *RepoSelector) String() string { return proto.CompactTextString(m) }
func (*RepoSelector) ProtoMessage()    {}
func (*RepoSelector) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{7}
}

func (m *RepoSelector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepoSelector.Unmarshal(m, b)
}
func (m *RepoSelector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepoSelector.Marshal(b, m, deterministic)
}
func (m *RepoSelector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepoSelector.Merge(m, src)
}
func (m *RepoSelector) XXX_Size() int {
	return xxx_messageInfo_RepoSelector.Size(m)
}
func (m *RepoSelector) XXX_DiscardUnknown() {
	xxx_messageInfo_RepoSelector.DiscardUnknown(m)
}

var xxx_messageInfo_RepoSelector proto.InternalMessageInfo

func (m *RepoSelector) GetSelectorKey() *wrappers.StringValue {
	if m != nil {
		return m.SelectorKey
	}
	return nil
}

func (m *RepoSelector) GetSelectorValue() *wrappers.StringValue {
	if m != nil {
		return m.SelectorValue
	}
	return nil
}

func (m *RepoSelector) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type Repo struct {
	// repository id
	RepoId *wrappers.StringValue `protobuf:"bytes,1,opt,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	// repository name
	Name *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// repository description
	Description *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// type of repository eg.[http|https|s3]
	Type *wrappers.StringValue `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// url of visiting the repository
	Url *wrappers.StringValue `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// credential of visiting the repository
	Credential *wrappers.StringValue `protobuf:"bytes,6,opt,name=credential,proto3" json:"credential,omitempty"`
	// visibility.eg:[public|private]
	Visibility *wrappers.StringValue `protobuf:"bytes,7,opt,name=visibility,proto3" json:"visibility,omitempty"`
	// owner path, concat string group_path:user_id
	OwnerPath *wrappers.StringValue `protobuf:"bytes,8,opt,name=owner_path,json=ownerPath,proto3" json:"owner_path,omitempty"`
	// runtime provider eg.[qingcloud|aliyun|aws|kubernetes]
	Providers []string `protobuf:"bytes,9,rep,name=providers,proto3" json:"providers,omitempty"`
	// labels
	Labels []*RepoLabel `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty"`
	// selectors of label
	Selectors []*RepoSelector `protobuf:"bytes,11,rep,name=selectors,proto3" json:"selectors,omitempty"`
	// status eg.[active|deleted]
	Status *wrappers.StringValue `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	// the time when repository create
	CreateTime *timestamp.Timestamp `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// record status changed time
	StatusTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=status_time,json=statusTime,proto3" json:"status_time,omitempty"`
	// list category
	CategorySet []*ResourceCategory `protobuf:"bytes,15,rep,name=category_set,json=categorySet,proto3" json:"category_set,omitempty"`
	// app default status eg[active|draft]
	AppDefaultStatus *wrappers.StringValue `protobuf:"bytes,16,opt,name=app_default_status,json=appDefaultStatus,proto3" json:"app_default_status,omitempty"`
	// controller, value 0 for self resource, value 1 for openpitrix resource
	Controller *wrappers.Int32Value `protobuf:"bytes,17,opt,name=controller,proto3" json:"controller,omitempty"`
	// owner
	Owner                *wrappers.StringValue `protobuf:"bytes,18,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Repo) Reset()         { *m = Repo{} }
func (m *Repo) String() string { return proto.CompactTextString(m) }
func (*Repo) ProtoMessage()    {}
func (*Repo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{8}
}

func (m *Repo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repo.Unmarshal(m, b)
}
func (m *Repo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repo.Marshal(b, m, deterministic)
}
func (m *Repo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repo.Merge(m, src)
}
func (m *Repo) XXX_Size() int {
	return xxx_messageInfo_Repo.Size(m)
}
func (m *Repo) XXX_DiscardUnknown() {
	xxx_messageInfo_Repo.DiscardUnknown(m)
}

var xxx_messageInfo_Repo proto.InternalMessageInfo

func (m *Repo) GetRepoId() *wrappers.StringValue {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *Repo) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Repo) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Repo) GetType() *wrappers.StringValue {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Repo) GetUrl() *wrappers.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Repo) GetCredential() *wrappers.StringValue {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *Repo) GetVisibility() *wrappers.StringValue {
	if m != nil {
		return m.Visibility
	}
	return nil
}

func (m *Repo) GetOwnerPath() *wrappers.StringValue {
	if m != nil {
		return m.OwnerPath
	}
	return nil
}

func (m *Repo) GetProviders() []string {
	if m != nil {
		return m.Providers
	}
	return nil
}

func (m *Repo) GetLabels() []*RepoLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Repo) GetSelectors() []*RepoSelector {
	if m != nil {
		return m.Selectors
	}
	return nil
}

func (m *Repo) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Repo) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Repo) GetStatusTime() *timestamp.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Repo) GetCategorySet() []*ResourceCategory {
	if m != nil {
		return m.CategorySet
	}
	return nil
}

func (m *Repo) GetAppDefaultStatus() *wrappers.StringValue {
	if m != nil {
		return m.AppDefaultStatus
	}
	return nil
}

func (m *Repo) GetController() *wrappers.Int32Value {
	if m != nil {
		return m.Controller
	}
	return nil
}

func (m *Repo) GetOwner() *wrappers.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

type DescribeReposRequest struct {
	// query key, support these fields(repo_id, name, type, visibility, status, app_default_status, owner, controller)
	SearchWord *wrappers.StringValue `protobuf:"bytes,1,opt,name=search_word,json=searchWord,proto3" json:"search_word,omitempty"`
	// sort key, order by sort_key, default create_time
	SortKey *wrappers.StringValue `protobuf:"bytes,2,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`
	// value = 0 sort ASC, value = 1 sort DESC
	Reverse *wrappers.BoolValue `protobuf:"bytes,3,opt,name=reverse,proto3" json:"reverse,omitempty"`
	// data limit per page, default value 20, max value 200
	Limit uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// data offset, default 0
	Offset uint32 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	// repository ids
	RepoId []string `protobuf:"bytes,11,rep,name=repo_id,json=repoId,proto3" json:"repo_id,omitempty"`
	// repository name
	Name []string `protobuf:"bytes,12,rep,name=name,proto3" json:"name,omitempty"`
	// repository type
	Type []string `protobuf:"bytes,13,rep,name=type,proto3" json:"type,omitempty"`
	// visibility eg:[public|private]
	Visibility []string `protobuf:"bytes,14,rep,name=visibility,proto3" json:"visibility,omitempty"`
	// status eg.[active|deleted]
	Status []string `protobuf:"bytes,15,rep,name=status,proto3" json:"status,omitempty"`
	// runtime provider eg.[qingcloud|aliyun|aws|kubernetes]
	Provider []string `protobuf:"bytes,16,rep,name=provider,proto3" json:"provider,omitempty"`
	// a kv string, tags of server
	Label *wrappers.StringValue `protobuf:"bytes,17,opt,name=label,proto3" json:"label,omitempty"`
	// selector of label
	Selector *wrappers.StringValue `protobuf:"bytes,18,opt,name=selector,proto3" json:"selector,omitempty"`
	// category ids
	CategoryId []string `protobuf:"bytes,19,rep,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	// owner
	Owner []string `protobuf:"bytes,20,rep,name=owner,proto3" json:"owner,omitempty"`
	// app default status eg.[draft|active]
	AppDefaultStatus []string `protobuf:"bytes,21,rep,name=app_default_status,json=appDefaultStatus,proto3" json:"app_default_status,omitempty"`
	// user id
	UserId string `protobuf:"bytes,22,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// controller, value 0 for self resource, value1 for openpitrix resource
	Controller           *wrappers.Int32Value `protobuf:"bytes,23,opt,name=controller,proto3" json:"controller,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DescribeReposRequest) Reset()         { *m = DescribeReposRequest{} }
func (m *DescribeReposRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeReposRequest) ProtoMessage()    {}
func (*DescribeReposRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{9}
}

func (m *DescribeReposRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeReposRequest.Unmarshal(m, b)
}
func (m *DescribeReposRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeReposRequest.Marshal(b, m, deterministic)
}
func (m *DescribeReposRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeReposRequest.Merge(m, src)
}
func (m *DescribeReposRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeReposRequest.Size(m)
}
func (m *DescribeReposRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeReposRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeReposRequest proto.InternalMessageInfo

func (m *DescribeReposRequest) GetSearchWord() *wrappers.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeReposRequest) GetSortKey() *wrappers.StringValue {
	if m != nil {
		return m.SortKey
	}
	return nil
}

func (m *DescribeReposRequest) GetReverse() *wrappers.BoolValue {
	if m != nil {
		return m.Reverse
	}
	return nil
}

func (m *DescribeReposRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeReposRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeReposRequest) GetRepoId() []string {
	if m != nil {
		return m.RepoId
	}
	return nil
}

func (m *DescribeReposRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *DescribeReposRequest) GetType() []string {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *DescribeReposRequest) GetVisibility() []string {
	if m != nil {
		return m.Visibility
	}
	return nil
}

func (m *DescribeReposRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeReposRequest) GetProvider() []string {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *DescribeReposRequest) GetLabel() *wrappers.StringValue {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *DescribeReposRequest) GetSelector() *wrappers.StringValue {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *DescribeReposRequest) GetCategoryId() []string {
	if m != nil {
		return m.CategoryId
	}
	return nil
}

func (m *DescribeReposRequest) GetOwner() []string {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *DescribeReposRequest) GetAppDefaultStatus() []string {
	if m != nil {
		return m.AppDefaultStatus
	}
	return nil
}

func (m *DescribeReposRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DescribeReposRequest) GetController() *wrappers.Int32Value {
	if m != nil {
		return m.Controller
	}
	return nil
}

type DescribeReposResponse struct {
	// total count of repository
	TotalCount uint32 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// list of repository
	RepoSet              []*Repo  `protobuf:"bytes,2,rep,name=repo_set,json=repoSet,proto3" json:"repo_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DescribeReposResponse) Reset()         { *m = DescribeReposResponse{} }
func (m *DescribeReposResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeReposResponse) ProtoMessage()    {}
func (*DescribeReposResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{10}
}

func (m *DescribeReposResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeReposResponse.Unmarshal(m, b)
}
func (m *DescribeReposResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeReposResponse.Marshal(b, m, deterministic)
}
func (m *DescribeReposResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeReposResponse.Merge(m, src)
}
func (m *DescribeReposResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeReposResponse.Size(m)
}
func (m *DescribeReposResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeReposResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeReposResponse proto.InternalMessageInfo

func (m *DescribeReposResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeReposResponse) GetRepoSet() []*Repo {
	if m != nil {
		return m.RepoSet
	}
	return nil
}

type ValidateRepoRequest struct {
	// required, type of repository
	Type *wrappers.StringValue `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// required, url of visiting the repository
	Url *wrappers.StringValue `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// required, credential of visiting the repository
	Credential           *wrappers.StringValue `protobuf:"bytes,3,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ValidateRepoRequest) Reset()         { *m = ValidateRepoRequest{} }
func (m *ValidateRepoRequest) String() string { return proto.CompactTextString(m) }
func (*ValidateRepoRequest) ProtoMessage()    {}
func (*ValidateRepoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{11}
}

func (m *ValidateRepoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRepoRequest.Unmarshal(m, b)
}
func (m *ValidateRepoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRepoRequest.Marshal(b, m, deterministic)
}
func (m *ValidateRepoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRepoRequest.Merge(m, src)
}
func (m *ValidateRepoRequest) XXX_Size() int {
	return xxx_messageInfo_ValidateRepoRequest.Size(m)
}
func (m *ValidateRepoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRepoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRepoRequest proto.InternalMessageInfo

func (m *ValidateRepoRequest) GetType() *wrappers.StringValue {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ValidateRepoRequest) GetUrl() *wrappers.StringValue {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *ValidateRepoRequest) GetCredential() *wrappers.StringValue {
	if m != nil {
		return m.Credential
	}
	return nil
}

type ValidateRepoResponse struct {
	// validate repository ok or not
	Ok *wrappers.BoolValue `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	// if validate error,return error code
	ErrorCode            uint32   `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateRepoResponse) Reset()         { *m = ValidateRepoResponse{} }
func (m *ValidateRepoResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateRepoResponse) ProtoMessage()    {}
func (*ValidateRepoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{12}
}

func (m *ValidateRepoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateRepoResponse.Unmarshal(m, b)
}
func (m *ValidateRepoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateRepoResponse.Marshal(b, m, deterministic)
}
func (m *ValidateRepoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateRepoResponse.Merge(m, src)
}
func (m *ValidateRepoResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateRepoResponse.Size(m)
}
func (m *ValidateRepoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateRepoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateRepoResponse proto.InternalMessageInfo

func (m *ValidateRepoResponse) GetOk() *wrappers.BoolValue {
	if m != nil {
		return m.Ok
	}
	return nil
}

func (m *ValidateRepoResponse) GetErrorCode() uint32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateRepoRequest)(nil), "openpitrix.CreateRepoRequest")
	proto.RegisterType((*CreateRepoResponse)(nil), "openpitrix.CreateRepoResponse")
	proto.RegisterType((*ModifyRepoRequest)(nil), "openpitrix.ModifyRepoRequest")
	proto.RegisterType((*ModifyRepoResponse)(nil), "openpitrix.ModifyRepoResponse")
	proto.RegisterType((*DeleteReposRequest)(nil), "openpitrix.DeleteReposRequest")
	proto.RegisterType((*DeleteReposResponse)(nil), "openpitrix.DeleteReposResponse")
	proto.RegisterType((*RepoLabel)(nil), "openpitrix.RepoLabel")
	proto.RegisterType((*RepoSelector)(nil), "openpitrix.RepoSelector")
	proto.RegisterType((*Repo)(nil), "openpitrix.Repo")
	proto.RegisterType((*DescribeReposRequest)(nil), "openpitrix.DescribeReposRequest")
	proto.RegisterType((*DescribeReposResponse)(nil), "openpitrix.DescribeReposResponse")
	proto.RegisterType((*ValidateRepoRequest)(nil), "openpitrix.ValidateRepoRequest")
	proto.RegisterType((*ValidateRepoResponse)(nil), "openpitrix.ValidateRepoResponse")
}

func init() { proto.RegisterFile("repo.proto", fileDescriptor_9a6377fc15c39a05) }

var fileDescriptor_9a6377fc15c39a05 = []byte{
	// 1377 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcd, 0x6e, 0x1b, 0x37,
	0x17, 0xc5, 0xc8, 0x96, 0x2c, 0xdd, 0xb1, 0x1c, 0x87, 0xb6, 0x93, 0xf9, 0x14, 0x7f, 0x36, 0xab,
	0x95, 0xeb, 0xca, 0x52, 0xab, 0xa4, 0x7f, 0xf9, 0x69, 0xe0, 0x38, 0x40, 0xe1, 0xa6, 0x01, 0x0a,
	0xb9, 0x48, 0x81, 0x6e, 0x54, 0x5a, 0x43, 0xc9, 0x03, 0x8f, 0x87, 0x53, 0x92, 0xb2, 0xab, 0x6d,
	0x80, 0x6e, 0xba, 0x74, 0x97, 0x05, 0x8a, 0x3e, 0x42, 0x81, 0x22, 0x2f, 0xd0, 0x3e, 0x41, 0xd1,
	0x57, 0xe8, 0x6b, 0xb4, 0x28, 0xc8, 0xa1, 0x46, 0x33, 0x92, 0x95, 0x8c, 0xe5, 0x2c, 0xba, 0xe8,
	0xca, 0x22, 0x79, 0x0e, 0x79, 0xc9, 0x7b, 0xcf, 0xe1, 0xd0, 0x00, 0x9c, 0x86, 0xac, 0x1e, 0x72,
	0x26, 0x19, 0x02, 0x16, 0xd2, 0x20, 0xf4, 0x24, 0xf7, 0xbe, 0xa9, 0x6c, 0xf4, 0x18, 0xeb, 0xf9,
	0xb4, 0xa1, 0x47, 0x0e, 0xfb, 0xdd, 0xc6, 0x19, 0x27, 0x61, 0x48, 0xb9, 0x88, 0xb0, 0x95, 0xcd,
	0xf1, 0x71, 0xe9, 0x9d, 0x50, 0x21, 0xc9, 0x49, 0x68, 0x00, 0xeb, 0x06, 0x40, 0x42, 0xaf, 0x41,
	0x82, 0x80, 0x49, 0x22, 0x3d, 0x16, 0x0c, 0xe9, 0x35, 0xfd, 0xa7, 0xb3, 0xd3, 0xa3, 0xc1, 0x8e,
	0x38, 0x23, 0xbd, 0x1e, 0xe5, 0x0d, 0x16, 0x6a, 0xc4, 0x05, 0x68, 0x5b, 0x0e, 0x42, 0x6a, 0x1a,
	0xd5, 0xbf, 0xe7, 0xe1, 0xfa, 0x1e, 0xa7, 0x44, 0xd2, 0x16, 0x0d, 0x59, 0x8b, 0x7e, 0xdd, 0xa7,
	0x42, 0xa2, 0xb7, 0x61, 0x3e, 0x20, 0x27, 0xd4, 0xb1, 0xb0, 0xb5, 0x65, 0x37, 0xd7, 0xeb, 0xd1,
	0xea, 0xf5, 0x61, 0x78, 0xf5, 0x03, 0xc9, 0xbd, 0xa0, 0xf7, 0x8c, 0xf8, 0x7d, 0xda, 0xd2, 0x48,
	0xf4, 0x11, 0xd8, 0x2e, 0x15, 0x1d, 0xee, 0xe9, 0x65, 0x9d, 0x5c, 0x06, 0x62, 0x92, 0xa0, 0x56,
	0x54, 0x61, 0x39, 0x73, 0x59, 0x56, 0x54, 0x48, 0x54, 0x87, 0xb9, 0x3e, 0xf7, 0x9d, 0xf9, 0x0c,
	0x04, 0x05, 0x44, 0xf7, 0x01, 0x3a, 0x9c, 0xba, 0x34, 0x90, 0x1e, 0xf1, 0x9d, 0x7c, 0x06, 0x5a,
	0x02, 0xaf, 0xd8, 0xa7, 0x9e, 0xf0, 0x0e, 0x3d, 0xdf, 0x93, 0x03, 0xa7, 0x90, 0x85, 0x3d, 0xc2,
	0xa3, 0x75, 0x28, 0x85, 0x9c, 0x9d, 0x7a, 0x2e, 0xe5, 0xc2, 0x59, 0xc0, 0x73, 0x5b, 0xa5, 0xd6,
	0xa8, 0x03, 0xdd, 0x81, 0x82, 0x4f, 0x0e, 0xa9, 0x2f, 0x9c, 0x62, 0x86, 0x79, 0x0d, 0x16, 0xdd,
	0x85, 0x92, 0xa0, 0x3e, 0xed, 0x48, 0xc6, 0x85, 0x53, 0xca, 0x40, 0x1c, 0xc1, 0xd1, 0x03, 0xb0,
	0x3b, 0x44, 0xd2, 0x1e, 0xe3, 0x83, 0xb6, 0xe7, 0x3a, 0x90, 0xe9, 0x30, 0x0c, 0x61, 0xdf, 0x45,
	0x9f, 0x00, 0x22, 0x61, 0xd8, 0x76, 0x69, 0x97, 0xf4, 0x7d, 0xd9, 0x16, 0x92, 0xc8, 0xbe, 0x70,
	0xec, 0x0c, 0xb3, 0x2c, 0x93, 0x30, 0x7c, 0x1c, 0xd1, 0x0e, 0x34, 0xab, 0xfa, 0x04, 0x50, 0xb2,
	0xfe, 0x44, 0xc8, 0x02, 0x41, 0xd1, 0xbb, 0xb0, 0xa0, 0xa4, 0xa4, 0x82, 0xcb, 0x52, 0x83, 0x05,
	0x05, 0xde, 0x77, 0xab, 0x2f, 0xf2, 0x70, 0xfd, 0x29, 0x73, 0xbd, 0xee, 0x20, 0x59, 0xcd, 0xb3,
	0x4d, 0x16, 0x8b, 0x20, 0x37, 0xab, 0x08, 0xe6, 0x66, 0x15, 0xc1, 0xfc, 0x65, 0x45, 0x90, 0x9f,
	0x4d, 0x04, 0x85, 0x2b, 0x89, 0x60, 0xe1, 0x2a, 0x22, 0x28, 0x4e, 0x17, 0x41, 0x69, 0x56, 0x11,
	0xc0, 0x95, 0x44, 0x60, 0xbf, 0x16, 0x11, 0x2c, 0xce, 0x2a, 0x82, 0x64, 0xd9, 0x5e, 0x4d, 0x04,
	0x3b, 0x80, 0x1e, 0x53, 0x9f, 0x46, 0x8a, 0x12, 0x43, 0x11, 0xdc, 0x4c, 0x4e, 0xa6, 0xce, 0x7e,
	0x08, 0xaf, 0xc3, 0x4a, 0x0a, 0x6e, 0x16, 0x9f, 0x8a, 0xff, 0xd5, 0x82, 0x92, 0x82, 0x7e, 0xaa,
	0x32, 0x80, 0x3e, 0x84, 0x92, 0x4e, 0x45, 0xfb, 0x98, 0x0e, 0x32, 0x45, 0x59, 0xd4, 0xf0, 0x27,
	0x74, 0xa0, 0xce, 0x3f, 0xa2, 0x9e, 0xaa, 0x81, 0x4c, 0x32, 0x03, 0x4d, 0xd0, 0xbf, 0xd1, 0x3d,
	0xb0, 0x3b, 0xda, 0x38, 0xda, 0xea, 0xb2, 0x34, 0x62, 0xab, 0x4c, 0xd0, 0x3f, 0x1f, 0xde, 0xa4,
	0xba, 0x92, 0x89, 0xa4, 0xaa, 0xa3, 0xfa, 0xbb, 0x05, 0x8b, 0x6a, 0x13, 0x07, 0xa6, 0x1a, 0xd0,
	0x43, 0x58, 0x1c, 0x56, 0x46, 0xe6, 0xad, 0xd8, 0x43, 0x86, 0xda, 0xcd, 0x1e, 0x2c, 0xc5, 0x13,
	0x64, 0xdf, 0x50, 0x79, 0xc8, 0x79, 0x0d, 0x7b, 0xfa, 0x6b, 0x01, 0xe6, 0xd5, 0x9e, 0xfe, 0xf3,
	0xbb, 0x7f, 0x87, 0xdf, 0xdd, 0x03, 0x60, 0x67, 0x01, 0xe5, 0xed, 0x90, 0xc8, 0xa3, 0x4c, 0x57,
	0x7b, 0x49, 0xe3, 0x3f, 0x23, 0xf2, 0x28, 0x6d, 0x96, 0xa5, 0x71, 0xb3, 0xdc, 0x89, 0xcd, 0x12,
	0xf0, 0xdc, 0x96, 0xdd, 0x5c, 0xab, 0x8f, 0x3e, 0x36, 0xeb, 0xb1, 0x38, 0x63, 0x97, 0x7c, 0x2f,
	0xe9, 0x92, 0xb6, 0x66, 0x38, 0xe3, 0x8c, 0xa1, 0x12, 0x92, 0x0e, 0x79, 0x07, 0x0a, 0x97, 0xb0,
	0x35, 0x83, 0x1d, 0x2f, 0xe2, 0xf2, 0x65, 0x8a, 0x58, 0x91, 0xa3, 0x69, 0x22, 0xf2, 0xd2, 0xab,
	0xc9, 0x11, 0x5c, 0x93, 0x1f, 0xc2, 0x62, 0xec, 0xe8, 0x82, 0x4a, 0xe7, 0x9a, 0xde, 0xea, 0x7a,
	0x7a, 0xab, 0x82, 0xf5, 0x79, 0x87, 0xee, 0x19, 0x5c, 0x2b, 0xbe, 0x03, 0x0e, 0xa8, 0x9c, 0xe2,
	0xe9, 0xcb, 0xb3, 0x78, 0xba, 0x4a, 0x7f, 0x87, 0x05, 0x92, 0x33, 0xdf, 0xa7, 0xdc, 0xb9, 0xae,
	0xe7, 0xb8, 0x35, 0x31, 0xc7, 0x7e, 0x20, 0x6f, 0x37, 0x87, 0x95, 0x17, 0xc3, 0x51, 0x13, 0xf2,
	0xba, 0x16, 0x1c, 0x94, 0x61, 0xed, 0x08, 0x5a, 0xfd, 0x39, 0x0f, 0xab, 0x8f, 0xb5, 0xba, 0x0e,
	0xd3, 0xd6, 0xff, 0x00, 0x6c, 0x41, 0x09, 0xef, 0x1c, 0xb5, 0xcf, 0x18, 0xcf, 0xe6, 0x09, 0x10,
	0x11, 0xbe, 0x60, 0xdc, 0x45, 0xef, 0x43, 0x51, 0x30, 0x2e, 0xb5, 0x2d, 0x66, 0xf1, 0x86, 0x05,
	0x85, 0x56, 0x96, 0x78, 0x47, 0xf9, 0xd0, 0x29, 0xe5, 0x62, 0xba, 0x93, 0x3d, 0x62, 0xcc, 0x37,
	0x2c, 0x03, 0x45, 0xab, 0x90, 0xf7, 0xbd, 0x13, 0x4f, 0x6a, 0x57, 0x28, 0xb7, 0xa2, 0x06, 0xba,
	0x01, 0x05, 0xd6, 0xed, 0xaa, 0xa4, 0xe6, 0x75, 0xb7, 0x69, 0x25, 0xaf, 0x29, 0x3b, 0x79, 0x4d,
	0x21, 0x64, 0xdc, 0x6c, 0x51, 0xf7, 0x46, 0x7e, 0x85, 0x8c, 0xdf, 0x94, 0xa3, 0x3e, 0xed, 0x28,
	0x1b, 0x29, 0x8d, 0x2f, 0xe9, 0x91, 0xa4, 0x8a, 0x6f, 0xc4, 0x1a, 0xb8, 0x16, 0xcd, 0x6f, 0xaa,
	0xbc, 0x02, 0xc5, 0xa1, 0x1e, 0x9d, 0x65, 0x3d, 0x12, 0xb7, 0x55, 0xf6, 0xb4, 0xf2, 0x4c, 0xd6,
	0x5f, 0x91, 0x3d, 0x0d, 0x45, 0x1f, 0x40, 0x71, 0x28, 0xbc, 0x4c, 0x49, 0x8f, 0xd1, 0x68, 0x33,
	0xfd, 0x1d, 0xb3, 0x12, 0x6d, 0x21, 0xf1, 0xa5, 0xb2, 0x3a, 0x2c, 0xa6, 0x55, 0x3d, 0x14, 0x35,
	0x50, 0xed, 0xc2, 0x5a, 0x5f, 0xd3, 0x90, 0xc9, 0x6a, 0xbe, 0x09, 0x0b, 0x7d, 0x41, 0xb9, 0x5a,
	0xe0, 0x06, 0xb6, 0xd4, 0x39, 0xa8, 0xe6, 0xbe, 0x3b, 0x56, 0xe6, 0x37, 0x2f, 0x55, 0xe6, 0x55,
	0x0a, 0x6b, 0x63, 0x15, 0x6b, 0xbe, 0x3e, 0x36, 0xc1, 0x96, 0x4c, 0x12, 0xbf, 0xdd, 0x61, 0xfd,
	0x40, 0xea, 0x92, 0x2d, 0xb7, 0x40, 0x77, 0xed, 0xa9, 0x1e, 0xf4, 0x16, 0x14, 0x75, 0xde, 0x55,
	0x45, 0xe4, 0xb4, 0xcc, 0x97, 0xc7, 0x1d, 0xad, 0xa5, 0x2b, 0xe3, 0x80, 0xca, 0xea, 0x0b, 0x0b,
	0x56, 0x9e, 0x11, 0xdf, 0x73, 0x27, 0x9f, 0xb9, 0xba, 0x1e, 0xac, 0xcb, 0xde, 0x3f, 0xb9, 0xd9,
	0xee, 0x9f, 0xb9, 0xcb, 0xdd, 0x3f, 0xd5, 0xaf, 0x60, 0x35, 0x1d, 0xb6, 0x39, 0x9d, 0x6d, 0xc8,
	0xb1, 0x63, 0x13, 0xf5, 0xcb, 0x34, 0x95, 0x63, 0xc7, 0xea, 0x22, 0xa1, 0x9c, 0x33, 0xbe, 0xc7,
	0xdc, 0xe8, 0x6a, 0x2f, 0xb7, 0x46, 0x1d, 0xcd, 0xdf, 0x0a, 0x60, 0xab, 0xa9, 0x9f, 0x92, 0x80,
	0xf4, 0x28, 0x47, 0x3f, 0x59, 0x00, 0xa3, 0xe7, 0x18, 0xfa, 0x7f, 0xf2, 0x4c, 0x27, 0xfe, 0x4d,
	0x50, 0xd9, 0x98, 0x36, 0x1c, 0xc5, 0x59, 0x3d, 0x38, 0xdf, 0xbd, 0x8f, 0xee, 0x46, 0x03, 0x58,
	0x25, 0x43, 0x78, 0x92, 0xf1, 0x41, 0x2d, 0xf1, 0x1b, 0xf7, 0x05, 0x75, 0xb1, 0x64, 0x58, 0x48,
	0xc6, 0x29, 0x0e, 0x49, 0xe7, 0x98, 0xf4, 0x28, 0x66, 0x5d, 0x4c, 0xc2, 0xf0, 0xf9, 0x1f, 0x7f,
	0x7e, 0x9f, 0x5b, 0xaa, 0x96, 0x1a, 0xa7, 0xef, 0x34, 0x34, 0xe5, 0xae, 0xb5, 0x8d, 0xbe, 0xcb,
	0x41, 0x39, 0x55, 0x34, 0x08, 0x27, 0xc3, 0xb8, 0xc8, 0x01, 0x2b, 0x6f, 0xbc, 0x04, 0x61, 0x62,
	0xfd, 0xc5, 0x3a, 0xdf, 0xfd, 0xd1, 0x42, 0x3f, 0x58, 0x1f, 0x53, 0x39, 0x8a, 0xcf, 0xa3, 0x02,
	0xd7, 0xba, 0x9e, 0x2f, 0x29, 0xc7, 0x67, 0x9e, 0x3c, 0xc2, 0xf2, 0x88, 0x0a, 0x8a, 0xbb, 0x1e,
	0xf5, 0x5d, 0xb1, 0x65, 0x9c, 0xa7, 0x86, 0x95, 0xbb, 0xd4, 0xb0, 0xaa, 0x90, 0x1a, 0x1e, 0x79,
	0x47, 0x0d, 0x47, 0xa2, 0xaa, 0xe1, 0x49, 0xa1, 0xd5, 0xb0, 0x56, 0x61, 0x0d, 0x8f, 0xd4, 0xf0,
	0x66, 0x0d, 0x1b, 0x0c, 0xe6, 0x54, 0xf6, 0x79, 0x80, 0x89, 0xef, 0xa7, 0x42, 0xd1, 0xe7, 0x61,
	0xa3, 0xd1, 0x79, 0xa0, 0x33, 0x80, 0xd1, 0xc3, 0x21, 0x9d, 0xae, 0x89, 0x77, 0x70, 0x3a, 0x5d,
	0x93, 0xef, 0x8d, 0xea, 0xf6, 0xf9, 0xee, 0x0a, 0x32, 0xef, 0xe7, 0x44, 0x8a, 0xa2, 0x2c, 0x34,
	0xd3, 0x59, 0x78, 0x6e, 0x81, 0x9d, 0x78, 0x36, 0xa0, 0x8d, 0xf4, 0x09, 0x8f, 0x3f, 0x3f, 0x2a,
	0x9b, 0x53, 0xc7, 0xcd, 0xe2, 0xcd, 0xf3, 0xdd, 0x5b, 0xe8, 0x7f, 0x8f, 0x88, 0xec, 0x1c, 0x61,
	0x57, 0x8f, 0x4f, 0x6e, 0x7d, 0x69, 0x3b, 0x1d, 0xc4, 0xb7, 0x16, 0x2c, 0x26, 0x05, 0x82, 0x52,
	0xab, 0x5c, 0xa0, 0xf8, 0x0a, 0x9e, 0x0e, 0x18, 0xc5, 0xb1, 0x86, 0x62, 0xb7, 0x18, 0x3f, 0x86,
	0x55, 0x84, 0xe2, 0x08, 0x1a, 0xa7, 0x06, 0xf4, 0x68, 0xfe, 0xcb, 0x5c, 0x78, 0x78, 0x58, 0xd0,
	0x0a, 0xbc, 0xfd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x58, 0x53, 0x0f, 0x6a, 0x05, 0x14, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RepoManagerClient is the client API for RepoManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RepoManagerClient interface {
	// Create repository, repository used to store package of app
	CreateRepo(ctx context.Context, in *CreateRepoRequest, opts ...grpc.CallOption) (*CreateRepoResponse, error)
	// Get repositories ,filter with these fields(repo_id, name, type, visibility, status, app_default_status, owner, controller), default return all repositories
	DescribeRepos(ctx context.Context, in *DescribeReposRequest, opts ...grpc.CallOption) (*DescribeReposResponse, error)
	// Modify repository
	ModifyRepo(ctx context.Context, in *ModifyRepoRequest, opts ...grpc.CallOption) (*ModifyRepoResponse, error)
	// Batch delete repositories
	DeleteRepos(ctx context.Context, in *DeleteReposRequest, opts ...grpc.CallOption) (*DeleteReposResponse, error)
	// Validate repository
	ValidateRepo(ctx context.Context, in *ValidateRepoRequest, opts ...grpc.CallOption) (*ValidateRepoResponse, error)
}

type repoManagerClient struct {
	cc *grpc.ClientConn
}

func NewRepoManagerClient(cc *grpc.ClientConn) RepoManagerClient {
	return &repoManagerClient{cc}
}

func (c *repoManagerClient) CreateRepo(ctx context.Context, in *CreateRepoRequest, opts ...grpc.CallOption) (*CreateRepoResponse, error) {
	out := new(CreateRepoResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RepoManager/CreateRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repoManagerClient) DescribeRepos(ctx context.Context, in *DescribeReposRequest, opts ...grpc.CallOption) (*DescribeReposResponse, error) {
	out := new(DescribeReposResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RepoManager/DescribeRepos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repoManagerClient) ModifyRepo(ctx context.Context, in *ModifyRepoRequest, opts ...grpc.CallOption) (*ModifyRepoResponse, error) {
	out := new(ModifyRepoResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RepoManager/ModifyRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repoManagerClient) DeleteRepos(ctx context.Context, in *DeleteReposRequest, opts ...grpc.CallOption) (*DeleteReposResponse, error) {
	out := new(DeleteReposResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RepoManager/DeleteRepos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repoManagerClient) ValidateRepo(ctx context.Context, in *ValidateRepoRequest, opts ...grpc.CallOption) (*ValidateRepoResponse, error) {
	out := new(ValidateRepoResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RepoManager/ValidateRepo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RepoManagerServer is the server API for RepoManager service.
type RepoManagerServer interface {
	// Create repository, repository used to store package of app
	CreateRepo(context.Context, *CreateRepoRequest) (*CreateRepoResponse, error)
	// Get repositories ,filter with these fields(repo_id, name, type, visibility, status, app_default_status, owner, controller), default return all repositories
	DescribeRepos(context.Context, *DescribeReposRequest) (*DescribeReposResponse, error)
	// Modify repository
	ModifyRepo(context.Context, *ModifyRepoRequest) (*ModifyRepoResponse, error)
	// Batch delete repositories
	DeleteRepos(context.Context, *DeleteReposRequest) (*DeleteReposResponse, error)
	// Validate repository
	ValidateRepo(context.Context, *ValidateRepoRequest) (*ValidateRepoResponse, error)
}

// UnimplementedRepoManagerServer can be embedded to have forward compatible implementations.
type UnimplementedRepoManagerServer struct {
}

func (*UnimplementedRepoManagerServer) CreateRepo(ctx context.Context, req *CreateRepoRequest) (*CreateRepoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepo not implemented")
}
func (*UnimplementedRepoManagerServer) DescribeRepos(ctx context.Context, req *DescribeReposRequest) (*DescribeReposResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeRepos not implemented")
}
func (*UnimplementedRepoManagerServer) ModifyRepo(ctx context.Context, req *ModifyRepoRequest) (*ModifyRepoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyRepo not implemented")
}
func (*UnimplementedRepoManagerServer) DeleteRepos(ctx context.Context, req *DeleteReposRequest) (*DeleteReposResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepos not implemented")
}
func (*UnimplementedRepoManagerServer) ValidateRepo(ctx context.Context, req *ValidateRepoRequest) (*ValidateRepoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateRepo not implemented")
}

func RegisterRepoManagerServer(s *grpc.Server, srv RepoManagerServer) {
	s.RegisterService(&_RepoManager_serviceDesc, srv)
}

func _RepoManager_CreateRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepoManagerServer).CreateRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RepoManager/CreateRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepoManagerServer).CreateRepo(ctx, req.(*CreateRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepoManager_DescribeRepos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeReposRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepoManagerServer).DescribeRepos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RepoManager/DescribeRepos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepoManagerServer).DescribeRepos(ctx, req.(*DescribeReposRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepoManager_ModifyRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepoManagerServer).ModifyRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RepoManager/ModifyRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepoManagerServer).ModifyRepo(ctx, req.(*ModifyRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepoManager_DeleteRepos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReposRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepoManagerServer).DeleteRepos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RepoManager/DeleteRepos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepoManagerServer).DeleteRepos(ctx, req.(*DeleteReposRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RepoManager_ValidateRepo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateRepoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepoManagerServer).ValidateRepo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RepoManager/ValidateRepo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepoManagerServer).ValidateRepo(ctx, req.(*ValidateRepoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RepoManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.RepoManager",
	HandlerType: (*RepoManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRepo",
			Handler:    _RepoManager_CreateRepo_Handler,
		},
		{
			MethodName: "DescribeRepos",
			Handler:    _RepoManager_DescribeRepos_Handler,
		},
		{
			MethodName: "ModifyRepo",
			Handler:    _RepoManager_ModifyRepo_Handler,
		},
		{
			MethodName: "DeleteRepos",
			Handler:    _RepoManager_DeleteRepos_Handler,
		},
		{
			MethodName: "ValidateRepo",
			Handler:    _RepoManager_ValidateRepo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "repo.proto",
}
