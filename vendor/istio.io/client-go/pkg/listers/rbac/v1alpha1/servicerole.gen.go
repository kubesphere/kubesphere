// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "istio.io/client-go/pkg/apis/rbac/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceRoleLister helps list ServiceRoles.
type ServiceRoleLister interface {
	// List lists all ServiceRoles in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceRole, err error)
	// ServiceRoles returns an object that can list and get ServiceRoles.
	ServiceRoles(namespace string) ServiceRoleNamespaceLister
	ServiceRoleListerExpansion
}

// serviceRoleLister implements the ServiceRoleLister interface.
type serviceRoleLister struct {
	indexer cache.Indexer
}

// NewServiceRoleLister returns a new ServiceRoleLister.
func NewServiceRoleLister(indexer cache.Indexer) ServiceRoleLister {
	return &serviceRoleLister{indexer: indexer}
}

// List lists all ServiceRoles in the indexer.
func (s *serviceRoleLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceRole))
	})
	return ret, err
}

// ServiceRoles returns an object that can list and get ServiceRoles.
func (s *serviceRoleLister) ServiceRoles(namespace string) ServiceRoleNamespaceLister {
	return serviceRoleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceRoleNamespaceLister helps list and get ServiceRoles.
type ServiceRoleNamespaceLister interface {
	// List lists all ServiceRoles in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceRole, err error)
	// Get retrieves the ServiceRole from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ServiceRole, error)
	ServiceRoleNamespaceListerExpansion
}

// serviceRoleNamespaceLister implements the ServiceRoleNamespaceLister
// interface.
type serviceRoleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceRoles in the indexer for a given namespace.
func (s serviceRoleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceRole, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceRole))
	})
	return ret, err
}

// Get retrieves the ServiceRole from the indexer for a given namespace and name.
func (s serviceRoleNamespaceLister) Get(name string) (*v1alpha1.ServiceRole, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("servicerole"), name)
	}
	return obj.(*v1alpha1.ServiceRole), nil
}
