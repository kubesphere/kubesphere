// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "istio.io/client-go/pkg/apis/rbac/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RbacConfigLister helps list RbacConfigs.
type RbacConfigLister interface {
	// List lists all RbacConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.RbacConfig, err error)
	// RbacConfigs returns an object that can list and get RbacConfigs.
	RbacConfigs(namespace string) RbacConfigNamespaceLister
	RbacConfigListerExpansion
}

// rbacConfigLister implements the RbacConfigLister interface.
type rbacConfigLister struct {
	indexer cache.Indexer
}

// NewRbacConfigLister returns a new RbacConfigLister.
func NewRbacConfigLister(indexer cache.Indexer) RbacConfigLister {
	return &rbacConfigLister{indexer: indexer}
}

// List lists all RbacConfigs in the indexer.
func (s *rbacConfigLister) List(selector labels.Selector) (ret []*v1alpha1.RbacConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RbacConfig))
	})
	return ret, err
}

// RbacConfigs returns an object that can list and get RbacConfigs.
func (s *rbacConfigLister) RbacConfigs(namespace string) RbacConfigNamespaceLister {
	return rbacConfigNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RbacConfigNamespaceLister helps list and get RbacConfigs.
type RbacConfigNamespaceLister interface {
	// List lists all RbacConfigs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.RbacConfig, err error)
	// Get retrieves the RbacConfig from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.RbacConfig, error)
	RbacConfigNamespaceListerExpansion
}

// rbacConfigNamespaceLister implements the RbacConfigNamespaceLister
// interface.
type rbacConfigNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RbacConfigs in the indexer for a given namespace.
func (s rbacConfigNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RbacConfig, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RbacConfig))
	})
	return ret, err
}

// Get retrieves the RbacConfig from the indexer for a given namespace and name.
func (s rbacConfigNamespaceLister) Get(name string) (*v1alpha1.RbacConfig, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("rbacconfig"), name)
	}
	return obj.(*v1alpha1.RbacConfig), nil
}
