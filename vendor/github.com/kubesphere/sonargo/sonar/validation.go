// [TODO] Code generated by "github.com/magicsong/generate-go-for-sonarqube", you should edit some validation logic here

package sonargo

func (s *CeService) ValidateActivityOpt(opt *CeActivityOption) error {
	return nil
}
func (s *CeService) ValidateComponentOpt(opt *CeComponentOption) error {
	return nil
}
func (s *CeService) ValidateTaskOpt(opt *CeTaskOption) error {
	return nil
}
func (s *ComponentsService) ValidateSearchOpt(opt *ComponentsSearchOption) error {
	return nil
}
func (s *ComponentsService) ValidateShowOpt(opt *ComponentsShowOption) error {
	return nil
}
func (s *ComponentsService) ValidateTreeOpt(opt *ComponentsTreeOption) error {
	return nil
}
func (s *DuplicationsService) ValidateShowOpt(opt *DuplicationsShowOption) error {
	return nil
}
func (s *FavoritesService) ValidateAddOpt(opt *FavoritesAddOption) error {
	return nil
}
func (s *FavoritesService) ValidateRemoveOpt(opt *FavoritesRemoveOption) error {
	return nil
}
func (s *FavoritesService) ValidateSearchOpt(opt *FavoritesSearchOption) error {
	return nil
}
func (s *IssuesService) ValidateAddCommentOpt(opt *IssuesAddCommentOption) error {
	return nil
}
func (s *IssuesService) ValidateAssignOpt(opt *IssuesAssignOption) error {
	return nil
}
func (s *IssuesService) ValidateAuthorsOpt(opt *IssuesAuthorsOption) error {
	return nil
}
func (s *IssuesService) ValidateBulkChangeOpt(opt *IssuesBulkChangeOption) error {
	return nil
}
func (s *IssuesService) ValidateChangelogOpt(opt *IssuesChangelogOption) error {
	return nil
}
func (s *IssuesService) ValidateDeleteCommentOpt(opt *IssuesDeleteCommentOption) error {
	return nil
}
func (s *IssuesService) ValidateDoTransitionOpt(opt *IssuesDoTransitionOption) error {
	return nil
}
func (s *IssuesService) ValidateEditCommentOpt(opt *IssuesEditCommentOption) error {
	return nil
}
func (s *IssuesService) ValidateSearchOpt(opt *IssuesSearchOption) error {
	return nil
}
func (s *IssuesService) ValidateSetSeverityOpt(opt *IssuesSetSeverityOption) error {
	return nil
}
func (s *IssuesService) ValidateSetTagsOpt(opt *IssuesSetTagsOption) error {
	return nil
}
func (s *IssuesService) ValidateSetTypeOpt(opt *IssuesSetTypeOption) error {
	return nil
}
func (s *IssuesService) ValidateTagsOpt(opt *IssuesTagsOption) error {
	return nil
}
func (s *LanguagesService) ValidateListOpt(opt *LanguagesListOption) error {
	return nil
}
func (s *MeasuresService) ValidateComponentOpt(opt *MeasuresComponentOption) error {
	return nil
}
func (s *MeasuresService) ValidateComponentTreeOpt(opt *MeasuresComponentTreeOption) error {
	return nil
}
func (s *MeasuresService) ValidateSearchHistoryOpt(opt *MeasuresSearchHistoryOption) error {
	return nil
}
func (s *MetricsService) ValidateCreateOpt(opt *MetricsCreateOption) error {
	return nil
}
func (s *MetricsService) ValidateDeleteOpt(opt *MetricsDeleteOption) error {
	return nil
}
func (s *MetricsService) ValidateSearchOpt(opt *MetricsSearchOption) error {
	return nil
}
func (s *MetricsService) ValidateUpdateOpt(opt *MetricsUpdateOption) error {
	return nil
}
func (s *NotificationsService) ValidateAddOpt(opt *NotificationsAddOption) error {
	return nil
}
func (s *NotificationsService) ValidateListOpt(opt *NotificationsListOption) error {
	return nil
}
func (s *NotificationsService) ValidateRemoveOpt(opt *NotificationsRemoveOption) error {
	return nil
}
func (s *PermissionsService) ValidateAddGroupOpt(opt *PermissionsAddGroupOption) error {
	return nil
}
func (s *PermissionsService) ValidateAddGroupToTemplateOpt(opt *PermissionsAddGroupToTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateAddProjectCreatorToTemplateOpt(opt *PermissionsAddProjectCreatorToTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateAddUserOpt(opt *PermissionsAddUserOption) error {
	return nil
}
func (s *PermissionsService) ValidateAddUserToTemplateOpt(opt *PermissionsAddUserToTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateApplyTemplateOpt(opt *PermissionsApplyTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateBulkApplyTemplateOpt(opt *PermissionsBulkApplyTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateCreateTemplateOpt(opt *PermissionsCreateTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateDeleteTemplateOpt(opt *PermissionsDeleteTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateRemoveGroupOpt(opt *PermissionsRemoveGroupOption) error {
	return nil
}
func (s *PermissionsService) ValidateRemoveGroupFromTemplateOpt(opt *PermissionsRemoveGroupFromTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateRemoveProjectCreatorFromTemplateOpt(opt *PermissionsRemoveProjectCreatorFromTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateRemoveUserOpt(opt *PermissionsRemoveUserOption) error {
	return nil
}
func (s *PermissionsService) ValidateRemoveUserFromTemplateOpt(opt *PermissionsRemoveUserFromTemplateOption) error {
	return nil
}

func (s *PermissionsService) ValidateSearchTemplatesOpt(opt *PermissionsSearchTemplatesOption) error {
	return nil
}
func (s *PermissionsService) ValidateSetDefaultTemplateOpt(opt *PermissionsSetDefaultTemplateOption) error {
	return nil
}
func (s *PermissionsService) ValidateUpdateTemplateOpt(opt *PermissionsUpdateTemplateOption) error {
	return nil
}
func (s *PluginsService) ValidateInstallOpt(opt *PluginsInstallOption) error {
	return nil
}
func (s *PluginsService) ValidateInstalledOpt(opt *PluginsInstalledOption) error {
	return nil
}
func (s *PluginsService) ValidateUninstallOpt(opt *PluginsUninstallOption) error {
	return nil
}
func (s *PluginsService) ValidateUpdateOpt(opt *PluginsUpdateOption) error {
	return nil
}
func (s *ProjectAnalysesService) ValidateCreateEventOpt(opt *ProjectAnalysesCreateEventOption) error {
	return nil
}
func (s *ProjectAnalysesService) ValidateDeleteOpt(opt *ProjectAnalysesDeleteOption) error {
	return nil
}
func (s *ProjectAnalysesService) ValidateDeleteEventOpt(opt *ProjectAnalysesDeleteEventOption) error {
	return nil
}
func (s *ProjectAnalysesService) ValidateSearchOpt(opt *ProjectAnalysesSearchOption) error {
	return nil
}
func (s *ProjectAnalysesService) ValidateUpdateEventOpt(opt *ProjectAnalysesUpdateEventOption) error {
	return nil
}
func (s *ProjectBadgesService) ValidateMeasureOpt(opt *ProjectBadgesMeasureOption) error {
	return nil
}
func (s *ProjectBadgesService) ValidateQualityGateOpt(opt *ProjectBadgesQualityGateOption) error {
	return nil
}
func (s *ProjectBranchesService) ValidateDeleteOpt(opt *ProjectBranchesDeleteOption) error {
	return nil
}
func (s *ProjectBranchesService) ValidateListOpt(opt *ProjectBranchesListOption) error {
	return nil
}
func (s *ProjectBranchesService) ValidateRenameOpt(opt *ProjectBranchesRenameOption) error {
	return nil
}
func (s *ProjectLinksService) ValidateCreateOpt(opt *ProjectLinksCreateOption) error {
	return nil
}
func (s *ProjectLinksService) ValidateDeleteOpt(opt *ProjectLinksDeleteOption) error {
	return nil
}
func (s *ProjectLinksService) ValidateSearchOpt(opt *ProjectLinksSearchOption) error {
	return nil
}
func (s *ProjectPullRequestsService) ValidateDeleteOpt(opt *ProjectPullRequestsDeleteOption) error {
	return nil
}
func (s *ProjectPullRequestsService) ValidateListOpt(opt *ProjectPullRequestsListOption) error {
	return nil
}
func (s *ProjectTagsService) ValidateSearchOpt(opt *ProjectTagsSearchOption) error {
	return nil
}
func (s *ProjectTagsService) ValidateSetOpt(opt *ProjectTagsSetOption) error {
	return nil
}
func (s *ProjectsService) ValidateBulkDeleteOpt(opt *ProjectsBulkDeleteOption) error {
	return nil
}
func (s *ProjectsService) ValidateBulkUpdateKeyOpt(opt *ProjectsBulkUpdateKeyOption) error {
	return nil
}
func (s *ProjectsService) ValidateCreateOpt(opt *ProjectsCreateOption) error {
	return nil
}
func (s *ProjectsService) ValidateDeleteOpt(opt *ProjectsDeleteOption) error {
	return nil
}
func (s *ProjectsService) ValidateSearchOpt(opt *ProjectsSearchOption) error {
	return nil
}
func (s *ProjectsService) ValidateUpdateKeyOpt(opt *ProjectsUpdateKeyOption) error {
	return nil
}
func (s *ProjectsService) ValidateUpdateVisibilityOpt(opt *ProjectsUpdateVisibilityOption) error {
	return nil
}
func (s *QualitygatesService) ValidateCopyOpt(opt *QualitygatesCopyOption) error {
	return nil
}
func (s *QualitygatesService) ValidateCreateOpt(opt *QualitygatesCreateOption) error {
	return nil
}
func (s *QualitygatesService) ValidateCreateConditionOpt(opt *QualitygatesCreateConditionOption) error {
	return nil
}
func (s *QualitygatesService) ValidateDeleteConditionOpt(opt *QualitygatesDeleteConditionOption) error {
	return nil
}
func (s *QualitygatesService) ValidateDeselectOpt(opt *QualitygatesDeselectOption) error {
	return nil
}
func (s *QualitygatesService) ValidateDestroyOpt(opt *QualitygatesDestroyOption) error {
	return nil
}
func (s *QualitygatesService) ValidateGetByProjectOpt(opt *QualitygatesGetByProjectOption) error {
	return nil
}
func (s *QualitygatesService) ValidateListOpt(opt *QualitygatesListOption) error {
	return nil
}
func (s *QualitygatesService) ValidateProjectStatusOpt(opt *QualitygatesProjectStatusOption) error {
	return nil
}
func (s *QualitygatesService) ValidateRenameOpt(opt *QualitygatesRenameOption) error {
	return nil
}
func (s *QualitygatesService) ValidateSearchOpt(opt *QualitygatesSearchOption) error {
	return nil
}
func (s *QualitygatesService) ValidateSelectOpt(opt *QualitygatesSelectOption) error {
	return nil
}
func (s *QualitygatesService) ValidateSetAsDefaultOpt(opt *QualitygatesSetAsDefaultOption) error {
	return nil
}
func (s *QualitygatesService) ValidateShowOpt(opt *QualitygatesShowOption) error {
	return nil
}
func (s *QualitygatesService) ValidateUpdateConditionOpt(opt *QualitygatesUpdateConditionOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateActivateRuleOpt(opt *QualityProfilesActivateRuleOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateActivateRulesOpt(opt *QualityProfilesActivateRulesOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateAddProjectOpt(opt *QualityProfilesAddProjectOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateBackupOpt(opt *QualityProfilesBackupOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateChangeParentOpt(opt *QualityProfilesChangeParentOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateChangelogOpt(opt *QualityProfilesChangelogOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateCopyOpt(opt *QualityProfilesCopyOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateCreateOpt(opt *QualityProfilesCreateOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateDeactivateRuleOpt(opt *QualityProfilesDeactivateRuleOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateDeactivateRulesOpt(opt *QualityProfilesDeactivateRulesOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateDeleteOpt(opt *QualityProfilesDeleteOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateExportOpt(opt *QualityProfilesExportOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateInheritanceOpt(opt *QualityProfilesInheritanceOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateProjectsOpt(opt *QualityProfilesProjectsOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateRemoveProjectOpt(opt *QualityProfilesRemoveProjectOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateRenameOpt(opt *QualityProfilesRenameOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateRestoreOpt(opt *QualityProfilesRestoreOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateSearchOpt(opt *QualityProfilesSearchOption) error {
	return nil
}
func (s *QualityProfilesService) ValidateSetDefaultOpt(opt *QualityProfilesSetDefaultOption) error {
	return nil
}
func (s *RulesService) ValidateCreateOpt(opt *RulesCreateOption) error {
	return nil
}
func (s *RulesService) ValidateDeleteOpt(opt *RulesDeleteOption) error {
	return nil
}
func (s *RulesService) ValidateRepositoriesOpt(opt *RulesRepositoriesOption) error {
	return nil
}
func (s *RulesService) ValidateSearchOpt(opt *RulesSearchOption) error {
	return nil
}
func (s *RulesService) ValidateShowOpt(opt *RulesShowOption) error {
	return nil
}
func (s *RulesService) ValidateTagsOpt(opt *RulesTagsOption) error {
	return nil
}
func (s *RulesService) ValidateUpdateOpt(opt *RulesUpdateOption) error {
	return nil
}
func (s *SettingsService) ValidateListDefinitionsOpt(opt *SettingsListDefinitionsOption) error {
	return nil
}
func (s *SettingsService) ValidateResetOpt(opt *SettingsResetOption) error {
	return nil
}
func (s *SettingsService) ValidateSetOpt(opt *SettingsSetOption) error {
	return nil
}
func (s *SettingsService) ValidateValuesOpt(opt *SettingsValuesOption) error {
	return nil
}
func (s *SourcesService) ValidateRawOpt(opt *SourcesRawOption) error {
	return nil
}
func (s *SourcesService) ValidateSCMOpt(opt *SourcesSCMOption) error {
	return nil
}
func (s *SourcesService) ValidateShowOpt(opt *SourcesShowOption) error {
	return nil
}
func (s *SystemService) ValidateChangeLogLevelOpt(opt *SystemChangeLogLevelOption) error {
	return nil
}
func (s *SystemService) ValidateLogsOpt(opt *SystemLogsOption) error {
	return nil
}
func (s *UserGroupsService) ValidateAddUserOpt(opt *UserGroupsAddUserOption) error {
	return nil
}
func (s *UserGroupsService) ValidateCreateOpt(opt *UserGroupsCreateOption) error {
	return nil
}
func (s *UserGroupsService) ValidateDeleteOpt(opt *UserGroupsDeleteOption) error {
	return nil
}
func (s *UserGroupsService) ValidateRemoveUserOpt(opt *UserGroupsRemoveUserOption) error {
	return nil
}
func (s *UserGroupsService) ValidateSearchOpt(opt *UserGroupsSearchOption) error {
	return nil
}
func (s *UserGroupsService) ValidateUpdateOpt(opt *UserGroupsUpdateOption) error {
	return nil
}
func (s *UserGroupsService) ValidateUsersOpt(opt *UserGroupsUsersOption) error {
	return nil
}
func (s *UserTokensService) ValidateGenerateOpt(opt *UserTokensGenerateOption) error {
	return nil
}
func (s *UserTokensService) ValidateRevokeOpt(opt *UserTokensRevokeOption) error {
	return nil
}
func (s *UserTokensService) ValidateSearchOpt(opt *UserTokensSearchOption) error {
	return nil
}
func (s *UsersService) ValidateChangePasswordOpt(opt *UsersChangePasswordOption) error {
	return nil
}
func (s *UsersService) ValidateCreateOpt(opt *UsersCreateOption) error {
	return nil
}
func (s *UsersService) ValidateDeactivateOpt(opt *UsersDeactivateOption) error {
	return nil
}
func (s *UsersService) ValidateGroupsOpt(opt *UsersGroupsOption) error {
	return nil
}
func (s *UsersService) ValidateSearchOpt(opt *UsersSearchOption) error {
	return nil
}
func (s *UsersService) ValidateUpdateOpt(opt *UsersUpdateOption) error {
	return nil
}
func (s *WebhooksService) ValidateCreateOpt(opt *WebhooksCreateOption) error {
	return nil
}
func (s *WebhooksService) ValidateDeleteOpt(opt *WebhooksDeleteOption) error {
	return nil
}
func (s *WebhooksService) ValidateDeliveriesOpt(opt *WebhooksDeliveriesOption) error {
	return nil
}
func (s *WebhooksService) ValidateDeliveryOpt(opt *WebhooksDeliveryOption) error {
	return nil
}
func (s *WebhooksService) ValidateListOpt(opt *WebhooksListOption) error {
	return nil
}
func (s *WebhooksService) ValidateUpdateOpt(opt *WebhooksUpdateOption) error {
	return nil
}
