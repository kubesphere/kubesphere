
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: federatedresourcequota.types.kubefed.io
spec:
  group: types.kubefed.io
  names:
    kind: FederatedResourceQuota
    listKind: FederatedResourceQuotaList
    plural: federatedresourcequota
    singular: federatedresourcequota
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              overrides:
                items:
                  properties:
                    clusterName:
                      type: string
                    clusterOverrides:
                      items:
                        properties:
                          op:
                            type: string
                          path:
                            type: string
                          value:
                            type: object
                        required:
                        - path
                        type: object
                      type: array
                  required:
                  - clusterName
                  type: object
                type: array
              placement:
                properties:
                  clusterSelector:
                    description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                  clusters:
                    items:
                      properties:
                        name:
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              template:
                properties:
                  spec:
                    description: ResourceQuotaSpec defines the desired hard limits to enforce for Quota.
                    properties:
                      hard:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/'
                        type: object
                      scopeSelector:
                        description: scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.
                        properties:
                          matchExpressions:
                            description: A list of scope selector requirements by scope of the resources.
                            items:
                              description: A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.
                              properties:
                                operator:
                                  description: Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.
                                  type: string
                                scopeName:
                                  description: The name of the scope that the selector applies to.
                                  type: string
                                values:
                                  description: An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - operator
                              - scopeName
                              type: object
                            type: array
                        type: object
                      scopes:
                        description: A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.
                        items:
                          description: A ResourceQuotaScope defines a filter that must match each object tracked by a quota
                          type: string
                        type: array
                    type: object
                type: object
            required:
            - placement
            - template
            type: object
          status:
            properties:
              clusters:
                items:
                  properties:
                    name:
                      type: string
                    status:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transit from one status to another.
                      type: string
                    lastUpdateTime:
                      description: Last time reconciliation resulted in an error or the last time a change was propagated to member clusters.
                      type: string
                    reason:
                      description: (brief) reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of cluster condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
