/*
Copyright 2019 The KubeSphere authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubesphere.io/kubesphere/pkg/apis/devops/v1alpha1"
)

// DevOpsProjectRoleLister helps list DevOpsProjectRoles.
type DevOpsProjectRoleLister interface {
	// List lists all DevOpsProjectRoles in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.DevOpsProjectRole, err error)
	// Get retrieves the DevOpsProjectRole from the index for a given name.
	Get(name string) (*v1alpha1.DevOpsProjectRole, error)
	DevOpsProjectRoleListerExpansion
}

// devOpsProjectRoleLister implements the DevOpsProjectRoleLister interface.
type devOpsProjectRoleLister struct {
	indexer cache.Indexer
}

// NewDevOpsProjectRoleLister returns a new DevOpsProjectRoleLister.
func NewDevOpsProjectRoleLister(indexer cache.Indexer) DevOpsProjectRoleLister {
	return &devOpsProjectRoleLister{indexer: indexer}
}

// List lists all DevOpsProjectRoles in the indexer.
func (s *devOpsProjectRoleLister) List(selector labels.Selector) (ret []*v1alpha1.DevOpsProjectRole, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DevOpsProjectRole))
	})
	return ret, err
}

// Get retrieves the DevOpsProjectRole from the index for a given name.
func (s *devOpsProjectRoleLister) Get(name string) (*v1alpha1.DevOpsProjectRole, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("devopsprojectrole"), name)
	}
	return obj.(*v1alpha1.DevOpsProjectRole), nil
}
