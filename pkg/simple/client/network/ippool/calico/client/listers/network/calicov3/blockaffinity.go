/*
Copyright 2020 The KubeSphere Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package calicov3

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	calicov3 "kubesphere.io/kubesphere/pkg/apis/network/calicov3"
)

// BlockAffinityLister helps list BlockAffinities.
type BlockAffinityLister interface {
	// List lists all BlockAffinities in the indexer.
	List(selector labels.Selector) (ret []*calicov3.BlockAffinity, err error)
	// Get retrieves the BlockAffinity from the index for a given name.
	Get(name string) (*calicov3.BlockAffinity, error)
	BlockAffinityListerExpansion
}

// blockAffinityLister implements the BlockAffinityLister interface.
type blockAffinityLister struct {
	indexer cache.Indexer
}

// NewBlockAffinityLister returns a new BlockAffinityLister.
func NewBlockAffinityLister(indexer cache.Indexer) BlockAffinityLister {
	return &blockAffinityLister{indexer: indexer}
}

// List lists all BlockAffinities in the indexer.
func (s *blockAffinityLister) List(selector labels.Selector) (ret []*calicov3.BlockAffinity, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*calicov3.BlockAffinity))
	})
	return ret, err
}

// Get retrieves the BlockAffinity from the index for a given name.
func (s *blockAffinityLister) Get(name string) (*calicov3.BlockAffinity, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(calicov3.Resource("blockaffinity"), name)
	}
	return obj.(*calicov3.BlockAffinity), nil
}
